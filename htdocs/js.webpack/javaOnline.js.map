{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/repository/synchronize/SynchroWorkspace.ts","webpack:///../../../../src/client/repository/synchronize/HistoryElement.ts","webpack:///../../../../src/client/repository/synchronize/RepositoryTool.ts","webpack:///../../../../src/client/repository/synchronize/SynchronizationListElement.ts","webpack:///../../../../src/client/repository/synchronize/RepositorySynchronizationManager.ts","webpack:///../../../../src/client/repository/update/RepositoryCreateManager.ts","webpack:///../../../../src/client/repository/update/RepositorySettingsManager.ts","webpack:///../../../../src/client/repository/update/RepositoryCheckoutManager.ts","webpack:///../../../src/client/main/IDEStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ajax","url","request","successCallback","errorCallback","showNetworkBusy","$","type","async","data","JSON","stringify","contentType","success","response","error","message","location","reload","jqXHR","statusText","status","busy","jQuery","show","hide","TokenType","main","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","secondsTillNextUpdate","this","errorHappened","that","find","attr","interval","clearInterval","counterTillForcedUpdate","setInterval","user","forceUpdate","sendUpdates","$rect","css","callback","sendIfNothingIsDirty","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","dirty","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","push","getWorkspaceData","moduleStore","getModules","file","text","getProgramTextFromMonacoModel","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","id","length","updateWorkspaces","w","entity","workspace_id","workspace","klasse","student_ids","class_id","publish_to","repoName","repoDescription","description","forEach","is_copy_of_id","repository_file_version","repository_id","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","Map","fileIdsSended","workspaces","wd","set","newWorkspaceNames","remoteWorkspace","filter","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","version","indexOf","model","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","join","alert","createNewWorkspace","workspaceListPanel","addElement","externalElement","iconClass","fileData","ae","f","identical_to_repository_version","panelElement","getNewModule","putModule","LexerState","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","spaceTokens","correspondingBracket","input","replace","tokenList","errorList","bracketError","bracketStack","pos","line","column","nonSpaceLastTokenType","tokens","errors","currentChar","charAt","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","pushError","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexCharacterConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","position","errorLevel","level","a","base","charCode","charCodeAt","posStart","posEnd","substring","escapeChar","lastCharWasNewline","sign","firstChar","radix","exponent","posExponentStart","exponentString","Number","parseInt","parseFloat","Math","pow","isSpace","Type","onlyFirstPass","usagePositions","documentation","PrimitiveType","initialValue","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","parameters","hasGenericTypes","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","firstOperand","secondOperand","Parameterlist","computeId","map","tv","klass","intrinsicData","attributeValues","class","av","baseClass","attributes","att","v","Visibility","booleanPrimitiveTypeCopy","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","switchStatement","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","newNode","ntr","ln","noOp","jn","dest","destination","sw","destinationLabels","dl","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","k","isGenericVariantFrom","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","getCompositeData","cd","interf","cdMap","Klass","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","itemList","getAttributes","attribute","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","programStack","programPosition","textPosition","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","typeLeft","typeRight","upToVisibility","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","hasConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","min","canCastTo","dontInheritFrom","missingMethods","missingAbstractMethods","implementedSignatures","missingInterfaceMethods","hierarchy","abstractMethods","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if2","newInterface","Interface","type2","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","unboxableAs","intPrimitiveType","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","initializeAttributeValues","floatPrimitiveType","doublePrimitiveType","declaration","v0","v1","booleanPrimitiveType","toString","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","trunc","Infinity","charPrimitiveType","match","toLocaleUpperCase","toLocaleLowerCase","toLowerCase","negation","automatic","needsStatement","String","fromCharCode","stringClass","localeCompare","endsWith","startsWith","trim","lastIndexOf","pattern","regExp","RegExp","strings","split","values","voidPrimitiveType","varType","IntegerType","FloatType","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","lengthAttribute","ArrayType","equals","referenceElement","array","destType","castTo","s1","parentSymbolTable","positionFrom","positionTo","SymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","EnumRuntimeObject","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","vi","valueIdentifier","enumInfo","enumObject","setBaseClass","typeStore","getType","initStackFrameNodes","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","mainMethod","classDefinitionsAST","classNode","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","return","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","cie","signatureMap","cieType","editsProvider","uri","resource","edit","startLineNumber","startColumn","endLineNumber","endColumn","checkIfMethodIsVirtual","getParameterList","scopeNode","stm","superConstructorCall","quickFix","methodCall","severity","MarkerSeverity","Error","actorClass","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","mo","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","getMethodBySignature","binaryOp","operator","nodes","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","Array","isArray","splice","statement","deleteStepFinishedFlagOnStepBefore","stepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","color","empty","dimension","elementCount","ec","pushEmptyArray","arrayType","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","conditionType","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","stackposOfVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","pushLocalVariableToStack","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","parameterStatements","allStatements","constructorOperands","programPointer","staticClassContext","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","callInputMethod","constantType","dataType","isAssignment","CodeGenerator","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","getResultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","token","token1","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","getSemicolonAngel","register","nextToken","Parser","operatorPrecedence","op","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","dontSkip","retStmt","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","opData","position2","wrong","right","correctOp","constantFolding","isConstant","pcLeft","pcRight","result","compute","toTokenType","parseUnary","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","annotation","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","objectToIndexMap","nextIndex","json","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","classOrInterface","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","type1","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","m1","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","e","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","typeE","tvE","iteratorInterface","hasNext","remove","listHelper","IteratorHelper","nextPos","objectArray","throwException","valueArray","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","adAll","clear","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","iterableInterface","collectionInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","getBottomDiv","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","$outputDiv","lastPrinting","performance","now","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","addClass","removeClass","nl","newLine","$lastSpan","pc","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","tList","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","round","targetElement","direction","$helper","top","bottom","to","b","width","height","html","$button","stopPropagation","Helper","close","fadeIn","fadeOut","mainBase","$element","helperHistory","flag","networkManager","controlButtons","speedControl","$grip","$buttonStepOver","bottomDiv","openHelper","InterpreterState","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","shiftKey","ctrlKey","altKey","kpc","isEmbedded","state","running","getMonacoEditor","hasTextFocus","preventDefault","debugger_","moduleStoreVersion","stepsPerSecond","maxStepsPerSecond","timerDelayMs","stack","stackframes","timerStopped","timerExtern","steps","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","isFirstStatement","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","actions","buttonActiveMatrix","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","paused","waitingForInput","keyboardTool","window","debugger","setInterpreter","timerId","timerFunction","req","send","am","getActionManager","startFunction","start","pauseFunction","pause","registerAction","isActive","$buttonStart","$buttonPause","stop","$buttonStop","oneStep","$buttonStepInto","stepOut","$buttonStepOut","$buttonRestart","setState","not_initialized","cem","currentlyEditedModuleIsClassOnly","getCurrentlyEditedModule","currentlyEditedModule","findModuleByFile","hasErrors","isStartable","mainModule","lastMainModule","getBreakpointPositionsFromEditor","clearExceptions","getCompiler","atLeastOneModuleIsStartable","copyExecutableModuleStoreToInterpreter","detachValues","newMainModule","getStartableModule","currentProgramPosition","currentStackframe","initializeEnums","initializeClasses","popProgram","currentMethod","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueMap","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","init","resetRuntime","hideProgrampointerPosition","forceRun","maxWorkloadFactor","t0","timeBetweenSteps","exception","n_stepsPerTimerGoal","nextStep","showProgramPointerAndVariables","comesStatement","dt","$errorDiv","consolePresent","config","withBottomPanel","withConsole","positionString","currentStatement","showError","pushCurrentProgram","errorLine","writeConsoleEntry","showTab","hideProgramPointerPosition","worldHelper","destroyWorld","processingHelper","restart","spriteAnimations","showProgramPointerPosition","showData","programPrinter","printModuleToBottomDiv","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","stackTop","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","actActors","getCurrentWorkspace","getModule","timerEntries","showHelper","showProgramEnd","counts","makeEmptyArray","switchValue","shapeRuntimeObject","socket","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","stackElements","isActor","stacksizeBefore","oldInterpreterState","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","executeImmediatelyInNewStackframe","constructor","ColorHelper","alpha","predefinedColors","m2","substr","m3","groupType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","x","y","wh","matrix","PIXI","Matrix","copyFrom","stage","localTransform","identity","translate","prepend","transform","onChange","angle","rotate","PI","factor","scale","initialWidth","initialHeight","group","defaultGroup","listener","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","world","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","$graphicsDiv","getGraphicsDiv","$jo_tabs","parents","maxWidth","maxHeight","$containerInner","oncontextmenu","TARGET_FPMS","app","Application","antialias","tickerFunction","delta","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Container","addChild","view","kpa","runActorWhenKeyEvent","listenerType","offsetX","offsetY","Point","applyInverse","onMouseEvent","button","types","invokeMouseListener","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","shapeHelper","displayObject","destroy","parseColorToOpenGL","renderer","backgroundColor","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","sd","methodSignatures","actorListIdentifier","ms","isKeyDown","setTimerPaused","isPressed","abstand","p1","p2","dx","dy","sqrt","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","polygonBerührtPolygon","punkte1","punkte2","shapeType","helper","getCenterX","getCenterY","sh","testdestroyed","move","angleInDeg","centerX","centerY","isOutsideView","shape","sh1","collidesWith","angleDeg","setVisible","tint","react","getCopy","bringToFront","sendToBack","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","centerXInitial","centerYInitial","setHitPolygonDirty","updateTransform","container","highestIndex","children","setChildIndex","render","bb","getBounds","bb1","transformHitPolygon","worldTransform","apply","tx","ty","bounds","screen","cX","cY","belongsToGroup","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","anzahlX","anzahlY","addToDefaultGroup","ro","bh","BitmapHelper","colorArray","colorBuffer","update","initGraphics","vertexArray","Float32Array","vertexIndexArray","Int32Array","xStep","yStep","vertexBuffer","Buffer","VertexIndexBuffer","geometry","Geometry","addIndex","shader","Shader","from","Mesh","DRAW_MODES","TRIANGLES","g","red","green","blue","hex","intColorToHexRGB","ch","r1","g1","b1","abs","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","deltaAlpha","cos","sin","CircleHelper","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","colorName","intColor","intColorToRGB","floor","random","max","z","o1","d1","rx","ry","setRadiusX","setRadiusY","EllipseHelper","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","getCollidingShapes","groupHelperCopy","GroupHelper","roCopy","shapeHelperCopy","inverse","invert","xSum","ySum","removeChildAt","inverseStageTransform","collisionPairs","alreadyCollidedHelpers2","shapeHelper1","shapeHelper2","closeAndFill","points","pointsNumber","ph","addPoint","PolygonHelper","moveTo","lineTo","x1","y1","x2","y2","RectangleHelper","radius","addCenterCircle","RoundedRectangleHelper","midx","midy","angleStart","dw","drawRoundedRect","SoundTools","sounds","sound","player","Howl","src","preload","soundMap","play","spriteHelper","sprite","polygon","HitPolygonStore","polygonStore","getPolygon","pixels","plugins","extract","h","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","end","fx","fy","isTransparent","scaleModeClass","spriteLibraryEntry","scaleMode","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","SpriteHelper","prefix","javaOnlineDir","sheet","Loader","resources","nameWithIndex","texture","textures","Sprite","dynamicTexture1","RenderTexture","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","SpriteLibrary","sle","fontsize","setFontsize","alignment","setAlignment","setText","getWidth","getHeight","textStyle","TextStyle","fontFamily","fontSize","fontStyle","fontWeight","fill","stroke","strokeThickness","dropShadow","wordWrap","align","TextHelper","Text","anchor","style","tm","TextMetrics","measureText","E","ceil","exp","log10","tan","asin","acos","atan","atan2","deltaTimeMillis","printStream","Date","timerRunning","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","date","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","getTime","oldMs","newMs","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","td","dow","getDay","monthIndex","setPoint","setPoints","valueMap","alphaDeg","valueMap1","oRet","valueMapRet","messageType","setUserData","getUserData","help","WebSocketClientHelper","webSocketHelper","rufname","familienname","username","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","connect","sendToAll","count","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","disconnect","clientList","idToClientMap","isOpen","unsentMessages","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","protocol","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","sendIntern","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","client","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","$div","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","forward","turn","setShowTurtle","xStart","yStart","lineElements","isFilled","initialHitPolygonDirty","lineWidth","calculateCenter","lineGraphic","turtle","drawTurtle","lastLineElement","angleInDegrees","cx","cy","TurtleHelper","newLineElement","vx","vy","vxp","vyp","firstPoint","le","setupInitialHitPolygon","oldErrorDecorations","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","methodCallPositions","path","uriCounter","Module","uriMap","Uri","scheme","editor","createModel","updateOptions","tabSize","onDidChangeContent","versionId","main1","text_before_revision","student_edited_after_revision","homeworkManager","showHomeWorkRevisionButton","renderHomeworkButton","methodAST","lineNumber","submitted_date","possibleMethods","lines","cp","mcpList","rerender","getBreakpoint","setBreakpoint","renderBreakpointDecorators","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","decorations","options","isWholeLine","overviewRuler","OverviewRulerLane","Left","minimap","MinimapPosition","Inline","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","deltaDecorations","getModel","getAllDecorations","decoration","EndOfLinePreference","LF","positionsOnLine","foundPosition","bestFoundPosition","dependsOnModulesWithErrors","programs","TypeStore","el","sort","e1","e2","errorLevelCompare","level1","level2","$buttonDiv","$htmlFirstLine","$startButtonDiv","setModuleActive","maxUriNumber","registerWorldType","withBaseModule","moduleMap","module_id","ModuleStore","copy","includeSystemModules","excludedModuleName","moduleName","moduleContext","detail","item","Struct","Class","generic","typeMap","caption","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","onFirstOpening","toggleClass","renderValue","renderListElements","de","DebuggerElement","$childContainer","removeAllChildren","escapeHtml","unsafe","twoDez","stringWrap","formatAsJavadocComment","indent","indentString","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","setSelectionRange","after","newValue","openContextMenu","items","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","document","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","setSelectItems","$selectElement","activeItemValue","selected","getSelectedObject","$selectDiv","selectedValue","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","elements","addPanel","$captionElement","$listElement","fixed","enabled","$buttonNew","$accordionDiv","renderElement","renameElement","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","targetGrow","hasClass","parts","animate","cssClass","addElementActionCallback","$elementAction","addEventListener","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","deleteCallback","pointPos","newText","invokeCallback","ae1","findElement","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","expression","accordionElement","$secondLine","$rightTextInFirstLine","evaluator","evaluate","setError","colorize","then","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","child","lastSymboltable","evaluateWatcherExpressions","watcherElement","$rightTextAfterFilename","we","$mainElement","keyEntries","buttons","executeKeyDownEvent","actionIdentifier","action","keys","active","activeElement","tagName","keyCode","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","compilerMessage","labels","lastLabelNumber","number","printNode","format3","printVariable","lexer","parser","code","getImitation","lexed","lex","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","withBottomBorder","$consoleEntry","ConsoleEntry","$firstLine","valueString","span","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","renderIndentGuides","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","language","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","scrollbar","vertical","horizontal","theme","addCommand","KeyCode","Enter","compileIfDirty","execute","UpArrow","nextHistoryPos","setPosition","DownArrow","compiler","lastVersionId","startTimer","stopTimer","timerHandle","getDebugger","compilation","compile","showErrors","markers","setModelMarkers","executeRapidly","$entry","consoleTop","commandEntry","resultEntry","detachValue","dontDetectLastChange","revealRangeInCenter","$mainDiv","oldDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","edits","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","$message","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","daysWithModules","dateString","dateWithoutTime","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","setWorkspaceActive","errorManager","initGUI","printCurrentlyExecutedModule","triggerCharacters","context","_contentWidgets","widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","getTypeCompletionItems","Promise","resolve","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","getTypeVariableDeclaration","getGenericParameterDefinition","decl","implList","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","signatureInformationList","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","selection","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","MyHoverProvider","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","parameterHints","cycle","mouseWheelZoom","onKeyDown","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","time","pushState","insertEndOfComment","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","bottomDiv1","documentElement","setProperty","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","darkColor","getMethodDeclarationAtPosition","zIndex","resourceEdits","usagePositionsInModule","$container","gripWidth","overallWidth","$outer","$bar","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","newPosition","intervalBorders","intervalDelta","intervalIndex","intervalMin","speed","speedString","$buttonsContainer","$editorContainer","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","ZoomControl","preventFading","zoomfactor","zfs","Alignment","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","svgElement","createElementNS","appendChild","$centerRectangle","createElement","adjustCenterRectangle","ev1","screenX","screenY","scrollLeft","diagramElements","xMin","yMin","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","fertig","xCm","yCm","isFree","insideX","insideY","withRaster","adjustToRaster","font","textElement","bbox","getBBox","DiagramElement","cmPerPx","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","diagram","withMethods","withAttributes","attachToClass","isSystemClass","scb","cb","ClassBox","hashedSignature","filename","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","clearTimeout","inDebounce","hash","position1Cm","position2Cm","ex","ey","arrow","arrows","step","ex1","ey1","rauteAlpha","routingArrow","DiagramArrow","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","currentWorkspaceId","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","currentClassBoxes","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","cbs","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","colorIndex","routingInput","drawArrows","routingWorker","terminate","Worker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","rootIdentifier","rootValue","objectDiagram","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","heading","isObjectDiagramEnabled","programMap","pmEntry","Workspace","restoreFromData","currentFileId","currentlyOpenModule","withFiles","myMain","synchronizeWithRepository","synchronizationManager","synchronizeWithWorkspace","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","each","$sliderDiv","md","mm","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","CompilerStatus","scriptList","programPointerDecoration","programIsExecutable","compileRunsAfterCodeReset","readConfig","initScripts","readScripts","semicolonAngel","actionManager","withFileList","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withPCode","withErrorList","editorState","saveViewState","markFile","restoreViewState","getScript","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$infoButton","$parent","$window","deleteScriptsInDB","programPointerModule","revealRangeInCenterIfOutsideViewport","beforeContentClassName","$filesHeader","compilerStatus","compiling","startable","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","compiledButNothingToRun","showParenthesisWarning","startRegistering","errorfree","renderStartButton","readyToRun","healSemicolons","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","format","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","numberOfSpaces","Dialog","$dialog","$dialogMain","colorStyle","placeholder","$buttonRow","$userSettingsButton","dialog","$oldPassword","$newPassword1","$newPassword2","waitDiv","waitMessage","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","initMenu","setTheme","menu","$link","initMenuitemCallbacks","opensubmenu","DistributeToStudentsDialog","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","students","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","sendCreateFile","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","$synchronizeAction","$homeworkButtonDiv","sendCreateWorkspace","enableNewButton","renderSynchronizeButton","removeWorkspace","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","repositoryButtonDone","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","hideHomeworkRevisionButton","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","Center","pe","me","mewidth","ee","meheight","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","ThemeManager","themes","initThemes","internalSwitchTheme","monacoTheme","cssColors","$loginSpinner","loginHappened","password","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","clearAfterLogout","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","WindowStateManager","oneTimeBackButtonListener","backButtonListener","revealLineInCenter","login","initSliders","initTypes","checkStartupComplete","correctPIXITransform","utils","skipHello","Transform","parentTransform","_localID","_currentLocalID","_parentID","_worldID","wt","renderErrorCount","isClassDiagramEnabled","debounceDiagramDrawing","currentWorkspace_id","manager","isCurrentRepositoryVersion","copiedFromWorkspace","repositoryIsWritable","idInsideRepository","idInsideWorkspace","workspaceFile","synchroWorkspace","markedAsMerged","originalText","monacoModel","repository","fileEntries","fileEntry","historyElement","repo","getRepositoryState","copyFromRepository","oldRepository","oldIdToFileMap","newIdToFileMap","newlyVersionedFileIds","repositoryHistoryEntry","isIntermediateEntry","timestamp","toUTCString","historyFiles","oldFile","committedFromFile","patch","getPatch","cff","commitFilesRequest","synchroFile","repositoryVersionBeforeCommit","cfr","currentUserSynchroWorkspace","contentOld","contentNew","dmp","diff_match_patch","patchObject","patch_make","deSerializedPatchObject","patch_apply","oldIdToModuleMap","historyEntryIndex","$historyElementDiv","HistoryElement","currentlyDragged","line1","line2","line3","$historyScrollDiv","copyFromHistoryElement","leftSynchroWorkspace","setupSynchronizationListElements","rightSynchroWorkspace","entries","historyEntries","startIndex","entry","setIntermediateState","deleteFile","changeFile","oldText","findIndex","RepositoryTool","fe","withHistoryElements","crepo","he","che","hfe","leftSynchroFile","rightSynchroFile","$buttons","pending","$leftFileDiv","$buttonLeftDiv","$buttonRightDiv","$rightFileDiv","$fileListDivs","allDivs","createLeftFileModel","createRightFileModel","arrowDirection","lastShownSynchronizationElement","setEditorModel","getEmptyMonacoModel","onContentChanged","compareFilesAndAdaptGUI","emptyGUI","leftCaption","leftVersionCaption","needsMerge","isWritable","rightCaption","rightVersionCaption","$spacer1","$spacer2","SynchronizationListElement","makeButton","onFileChanged","isSynchronized","$markAsMergedButtonDiv","showMergedDiv","updateCenterButtons","$mergedDiv","$fileListHeaderDivs","guiReady","synchronizationListElements","historyElements","gainRepositoryLock","attachToWorkspaceAndRepository","timer","currentRepository","copyFromWorkspace","attachToRepository","deserializeRepository","currentRepositorySynchroWorkspace","setupHistoryElements","lastShownHistoryElement","lastSynchroFileLeft","lastSynchroFileRight","fileElements","synchroFileMap","sfile","fileElement","fe1","fe2","synchroListElement","setHeader","$backToWorkspaceButton","$writeWorkspaceChangesButton","writable","$backToCurrentRepositoryVersionButton","$writeRepositoryChangesButton","lastFileSelected","$synchroDiv","$mainHeadingDiv","$belowMainHeadingDiv","$buttonsTopRightDiv","$exitButton","$leftDiv","$historyOuterDiv","$leftUpperDiv","$fileListHeaderOuterDiv","$fileListOuterDiv","$fileListFooterDiv","$fileListHeaderContainerRight","fileListHeaderRight","$fileListHeaderCenter","$updateAllButton","updateAll","$commitAllButton","commitAll","backToWorkspace","backToCurrentRepositoryVersion","writeWorkspaceChanges","writeRepositoryChanges","setColor","makeDroppable","initEditor","$dropZoneDiv","$dialogDiv","$dialogTextarea","$dialogButtonDiv","$buttonCancel","$buttonOK","commit","writeChangesToWorkspace","hasChanges","click","publishedToItems","$updateDiv","$mainHeading","$repoName","$repoDescription","$repoPublishedTo","$createButton","createButtonClicked","$cancelButton","cancelButtonClicked","isStudent","initCreateMode","publishedTo","sendCreateRepository","repositoryOwnerItems","users","exitButtonClicked","$divBelow","$divLeft","$repoListDiv","enableSaveButton","$repoOwner","$userlistDiv","$saveButton","saveButtonClicked","is_student","showRepositoryList","repInfo","emptyRepositoryInfo","onlyOwnRepositories","$firstDiv","firstRepInfo","repositories","$namediv","$deleteDiv","selectRepository","deleteRepository","$repoDiv","is","repoData","published_to","repositoryUserList","userData","$userDiv","firstName","lastName","$canWriteDiv","$canWriteCheckBox","canWrite","owner","updateRepositoryRequest","writeAccessList","has_write_access","confirm","owner_name","owner_username","filterbuttonOptions","$checkoutDiv","$chooseWorkspaceDiv","$workspaceDropdown","$publishedToFilterDiv","$filterButtonDiv","$radioButton","showRepositories","$inputFilterDiv","$filterInput","$checkoutButton","checkoutButtonClicked","filteredRepositories","repoInfo","filterSearch","$divRight","selectFirstRepository","new_workspace","require","paths","availableLanguages","ignoreDuplicateModules","load"],"mappings":"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,EAAUN,GACxB2D,aAAcH,GAEdlK,EAAI8D,KAAKP,KAAKuB,gBAAgBwF,aAAaH,GACrC,MAAND,IAAYA,EAAGH,gBAAkB/J,GACpBgH,EAAUjB,YAChBwE,UAAUvK,Q,2BAlX7B,K,yHCNA,SAAYsD,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BACA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,0CAGA,4BACA,0BACA,4DACA,0DACA,4DACA,0DACA,kDACA,sCACA,0CACA,oCACA,sDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FAhLJ,CAAYA,MAAS,KAmLd,IChLFkH,EDgLMC,GAAiB,OACvBnH,EAAUoH,WAAa,kBADA,IAGvBpH,EAAUqH,gBAAkB,0BAHL,IAIvBrH,EAAUsH,sBAAwB,6BAJX,IAKvBtH,EAAUuH,gBAAkB,4BALL,IAMvBvH,EAAUwH,eAAiB,g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","file":"javaOnline.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { LoginRequest } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n    errorCallback?: (message: string) => void) {\r\n    showNetworkBusy(true);\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\n\r\nexport class NetworkManager {\r\n    \r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>){        \r\n        \r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if(this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(()=>{\r\n            \r\n            if(that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if(that.secondsTillNextUpdate < 0 ){\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let forceUpdate = counterTillForcedUpdate == 0;\r\n                if(forceUpdate) counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => {}, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n            \r\n            if(that.errorHappened){\r\n                $rect.css('fill', '#c00000');                \r\n                this.$updateTimerDiv.attr('title',\"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');                \r\n                this.$updateTimerDiv.attr('title',that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n        \r\n    }\r\n    \r\n    sendUpdates(callback?: ()=>void, sendIfNothingIsDirty: boolean = false){\r\n        \r\n        if(this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if(classDiagram?.dirty || this.main.userDataDirty){\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => {});\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for(let ws of this.main.workspaceList){\r\n\r\n            if(!ws.saved){\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n            \r\n            for(let m of ws.moduleStore.getModules(false)){\r\n                if(!m.file.saved){\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList, \r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        let that = this;\r\n        if(wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty){\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if(!that.errorHappened){\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if(callback != null){\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            } );\r\n        } else {\r\n            if(callback != null){\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,            \r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids\r\n            }\r\n    \r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n    \r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n    \r\n            ajax(\"createRepository\", request, (response: {success: boolean, message?: string, repository_id?: number}) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n    \r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void){\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse){\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for(let workspace of this.main.workspaceList){\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if(remoteWorkspace != null){\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n                \r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for(let module of workspace.moduleStore.getModules(false)){\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if(remoteFileData == null){\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if(remoteFileData.version > module.file.version){\r\n                        if(fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate){\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for(let remoteFile of remoteWorkspace.files){\r\n                    if(idToModuleMap.get(remoteFile.id) == null){\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }        \r\n\r\n        if(newWorkspaceNames.length > 0){\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n\r\n        this.main.workspaceList.push(w);\r\n        this.main.projectExplorer.workspaceListPanel.addElement({\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\"\r\n        });\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||, !\r\n    ampersand, // &\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushError(\"| gefunden. Gemeint ist wohl || (Oder-Operator)?\", 1);\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant();\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if(base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if(base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if(base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if(base == 16) return (charCode >= 48 && charCode <= 57 ) || (charCode >= 97 && charCode <= 102) ||\r\n         (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                if (this.nextChar == \"u\") {\r\n                    this.next();\r\n\r\n                } else {\r\n                    let escapeChar = EscapeSequenceList[this.nextChar];\r\n                    if (escapeChar == null) {\r\n                        this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                    } else {\r\n                        char = escapeChar;\r\n                        this.next();\r\n                    }\r\n                }\r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if(!(lastCharWasNewline && char == \" \")){\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            } \r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if(this.currentChar == '-'){\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if(this.currentChar == '-'){\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if(this.currentChar == 'd' || this.currentChar == 'f'){\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if(radix != 10){\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if(exponent != 0) value *= Math.pow(10, exponent);       \r\n        \r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation(){\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at,text, line, column, text.length + 1);        \r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % parameters.length) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    attributeValues: Map<string, Map<string, Value>> = new Map();\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        // while (klass != null) {\r\n        //     let map: Map<string, Value> = new Map();\r\n        //     this.attributeValues.set(klass.identifier, map);\r\n        //     for (let attribute of klass.attributes) {\r\n        //         let value: Value = {\r\n        //             type: attribute.type,\r\n        //             value: null\r\n        //         };\r\n\r\n        //         if (attribute.type instanceof PrimitiveType) {\r\n        //             value.value = attribute.type.initialValue;\r\n        //         }\r\n        //         map.set(attribute.identifier, value);\r\n        //     }\r\n        //     klass = klass.baseClass;\r\n        // }\r\n\r\n    }\r\n\r\n    getValue(identifier: string):Value{\r\n\r\n        let klass = this.class;\r\n        \r\n        while(klass != null){\r\n            let av = this.attributeValues.get(klass.identifier).get(identifier);\r\n            if(av != null) \r\n            {\r\n                if(av.updateValue != null){\r\n                    av.updateValue(av);\r\n                }\r\n                return av;\r\n            }\r\n\r\n            // let attribute = klass.attributeMap.get(identifier);\r\n            // if(attribute != null && attribute.updateValue != null){\r\n            //     return attribute.updateValue({type: this.class, value: this});\r\n            // }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    initializeAttributeValues(){\r\n\r\n        this.attributeValues = new Map();\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n            \r\n            let map:Map<string, Value> = new Map();\r\n            this.attributeValues.set(klass.identifier, map);\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                map.set(att.identifier, v);\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[this.program.statements.length - 1];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if(i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if(i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) continue;\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let typeLeft: Klass = <Klass>(<RuntimeObject>firstOperand.value).class;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while(klass != null){\r\n                for (let i of klass.implements) {\r\n                    if (type.getNonGenericIdentifier() == i.getNonGenericIdentifier()) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedSignatures: string[] = [];\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null && !this.isAbstract) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                        } else {\r\n                            implementedSignatures.push(m.getSignatureWithReturnParameter());\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                for (let m of abstractMethods) {\r\n\r\n                    if (implementedSignatures.indexOf(m.getSignatureWithReturnParameter()) < 0) {\r\n                        missingAbstractMethods.push(m);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    if (implementedSignatures.indexOf(m.getSignatureWithReturnParameter()) < 0) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.identifier);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type.debugOutput(object.getValue(attribute.identifier), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String){\r\n        if(this.getNonGenericIdentifier() == identifier) return this;\r\n        for(let if1 of this.extends){\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if(if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        return this.methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if(suits && isEllipsis){\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n                        \r\n                        for (let j = i; j < parameterTypes.length; j++) {\r\n                            let givenType = parameterTypes[i];\r\n        \r\n                            if (givenType == null) {\r\n                                suits = false; break;\r\n                            }\r\n        \r\n                            if (mParameterTypeEllispsis == givenType) {\r\n                                continue;\r\n                            }\r\n        \r\n                            if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                                howManyCastings++;\r\n                                continue;\r\n                            }\r\n        \r\n                            suits = false;\r\n                            break;\r\n                        }\r\n        \r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if(parameterTypes.length == 0){\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n\r\n            }, false, false));\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == NaN;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == NaN;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == NaN;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == NaN;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType},\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType},\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType},\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if(operation == TokenType.keywordInstanceof){\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"int\": stringPrimitiveType, \r\n            \"float\": stringPrimitiveType, \"double\": doublePrimitiveType, \r\n            \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType},\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType},\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value)); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for(let s of strings){\r\n                    values.push({type: stringPrimitiveType, value: s});\r\n                }\r\n                \r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, TokenType.multiplicationAssignment, TokenType.divisionAssignment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            let destType = method.getParameterType[i];\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n            if (c != null && c.baseClass?.hasConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = true;\r\n                    if (methodNode.statements[0].type == TokenType.scopeNode) {\r\n                        let stm = methodNode.statements[0].statements;\r\n                        if (stm.length > 0 && stm[0].type == TokenType.superConstructorCall) {\r\n                            error = false;\r\n                        }\r\n                    } else if (methodNode.statements[0].type == TokenType.superConstructorCall) {\r\n                        error = false;\r\n                    }\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt Konstruktoren, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode) {\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        this.currentProgram.labelManager.removeNode(lst);\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type.identifier + \") kann nicht in den Datentyp \" + targetType.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwaret einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            collectionElementType = collectionType.typeVariables[0].type;\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        let parameterStatements: Statement[][] = [];\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            for (let p of node.constructorOperands) {\r\n                let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n            }\r\n\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n                let srcType = parameterTypes[i];\r\n                for (let st of parameterStatements[i]) {\r\n                    this.currentProgram.statements.push(st);\r\n                }\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIdentifier: node.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        klass: (<Klass>objectType).staticClass,\r\n                        attributeIdentifier: node.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIdentifier: node.identifier,\r\n                            klass: objectType\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n            this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let superclassType: Klass = <Klass>classContext.baseClass;\r\n        if (superclassType instanceof StaticClass) {\r\n            this.pushError(\"Statische Methoden haben keine super-Methoden.\", node.position);\r\n            return { type: null, isAssignable: false };\r\n        }\r\n        if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: true,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even iv method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        let parameterStatements: Statement[][] = [];\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            for (let p of node.operands) {\r\n                let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n            let srcType = parameterTypes[i];\r\n            for (let st of parameterStatements[i]) {\r\n                this.currentProgram.statements.push(st);\r\n            }\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass) &&\r\n            (objectNode.type.Klass instanceof InputClass)) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callInputMethod,\r\n                method: method,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n            });\r\n\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n    [TokenType.or], [TokenType.and],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseTerm();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        if (this.tt == TokenType.colon) {\r\n            return left;\r\n        }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                term = {\r\n                    type: TokenType.keywordThis,\r\n                    position: position\r\n                };\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if(klass.module.isSystemModule && klass.getMethodBySignature(\"String toJson()\") == null){\r\n            return null; \r\n        }\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        while (klass != null) {\r\n            let attributeValues = rto.attributeValues.get(klass.identifier);\r\n            if (attributeValues != null) {\r\n                let first: boolean = true;\r\n                let serializedAttributes: any;\r\n                for (let attribute of klass.attributes) {\r\n                    if (!attribute.isStatic && !attribute.isTransient) {\r\n                        if (first) {\r\n                            first = false;\r\n                            serializedAttributes = {};\r\n                            serializedObject[klass.identifier] = serializedAttributes;\r\n                        }\r\n                        serializedAttributes[attribute.identifier] = this.toJsonObj(attributeValues.get(attribute.identifier));\r\n                    }\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for(let vtr of this.valuesToResolve){\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if(value != null){\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore, \r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n            \r\n            while (klass != null) {\r\n                let attributeValues = rto.attributeValues.get(klass.identifier);\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributeValues != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributeValues.set(attribute.identifier, this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter));\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = {type: klass1, value: rto};\r\n            this.indexToObjectMap[index] = value;\r\n            return value; \r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n    }\r\n\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface) {\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[]): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[]): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                if (m != null) {\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Ändert das Element an der Position index der Liste. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            this.valueArray = this.valueArray.concat(ah.valueArray);\r\n            this.objectArray = this.objectArray.concat(ah.objectArray);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push(r);\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index < this.objectArray.length && index >= 0){\r\n                this.valueArray[index] = r;\r\n                this.objectArray[index] = r.value;\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push(object);\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, object);\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n    \r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n            return true;\r\n        });\r\n        element.on(\"keypress\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.staticClass.classObject.initializeAttributeValues();\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n    }\r\n\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.pause();\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n        } else {\r\n            this.stepOverNestingLevel = 10000;\r\n            let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n            let node = this.currentProgram.statements[this.currentProgramPosition];\r\n            let position = node.position;\r\n            let exception = this.nextStep();\r\n            if (exception != null) {\r\n                this.throwException(exception);\r\n                return;\r\n            }\r\n\r\n            if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n                this.stepOverNestingLevel = 0;\r\n                if (position != null) {\r\n                    this.leaveLine = position.line;\r\n                } else {\r\n                    this.leaveLine = -1;\r\n                }\r\n                this.start();\r\n            } else\r\n                //@ts-ignore\r\n                if (this.state == InterpreterState.done) {\r\n                    this.main.hideProgramPointerPosition();\r\n                } else {\r\n                    this.showProgramPointerAndVariables();\r\n                    //@ts-ignore\r\n                    if (this.state != InterpreterState.waitingForInput) {\r\n                        this.setState(InterpreterState.paused);\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    nextStep(): string {\r\n\r\n        let stepFinished: boolean = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIdentifier);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIdentifier);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null) {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n                object.initializeAttributeValues();\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.actActors.length > 0) || this.processingHelper != null) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.worldHelper != null) {\r\n                    this.worldHelper.spriteAnimations = [];\r\n                }\r\n\r\n                this.main.hideProgramPointerPosition();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n                this.currentProgramPosition--;\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n            this.webSocketsToCloseAfterProgramHalt = [];\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n        object.initializeAttributeValues();\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred \": 0xCD5C5C,\r\n        \"indigo \": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { InterpreterState, Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { KeyboardTool } from \"../../tools/KeyboardTool.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Point } from \"pixi.js\";\r\nimport { Punkt } from \"../../tools/MatheTools.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(x,y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(x,y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.scale(factor, factor);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.scale(factor, factor);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.stage.localTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.localTransform.translate(-left, -top);\r\n                wh.stage.localTransform.scale(wh.initialWidth/width, wh.initialHeight/height);\r\n\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.width);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.height);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: PIXI.Container;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n\r\n        this.initialHeight = height;\r\n        this.initialWidth = width;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.app = new PIXI.Application({\r\n            antialias: true,\r\n            width: width, height: height,\r\n            //resizeTo: $containerInner[0]\r\n        });\r\n\r\n\r\n        let that = this;\r\n        // let i = 0;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            // if (i++ % 2 == 0) \r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        this.stage = new PIXI.Container();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n\r\n        // this.stage.localTransform.translate(-400, -300);\r\n        // this.stage.localTransform.rotate(-45/180*Math.PI);\r\n        // this.stage.localTransform.translate(400,300);\r\n        // this.stage.transform.onChange();\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.on(listenerType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x, y);\r\n                this.stage.localTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        this.summedDelta += delta;\r\n\r\n        for (let spriteHelper of this.spriteAnimations) {\r\n            spriteHelper.tick(delta);\r\n        }\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        this.summedDelta = 0;\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            if (this.actActors.length > 0) {\r\n                this.interpreter.timerFunction(33.33, true, 0.5);\r\n                this.interpreter.timerStopped = false;\r\n                this.interpreter.timerFunction(33.33, false, 0.08);\r\n            } else {\r\n                this.interpreter.timerFunction(33.33, false, 0.7);\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            // actActors: ActorData[] = [];\r\n            // keyPressedActors: ActorData[] = [];\r\n            // actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        this.app.renderer.backgroundColor = c.color;\r\n    }\r\n\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n        this.app.destroy();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null || method?.invoke != null) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(angleInDeg);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der zweite Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"setCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"setCenter\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroup() {\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    tint(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c.color;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if(!(this[\"lineElements\"] != null) && (shapeHelper[\"lineElements\"] != null)){\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let screen = this.worldHelper.app.screen;\r\n        return bounds.right < screen.left || bounds.left > screen.right\r\n            || bounds.bottom < screen.top || bounds.top > screen.bottom;\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n        \r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        this.displayObject.transform.onChange();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n    }\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.x;\r\n    }\r\n    \r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelper(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelper extends ShapeHelper {\r\n\r\n    private colorArray: Float32Array;\r\n    private colorBuffer: PIXI.Buffer;\r\n\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelper = new BitmapHelper(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n\r\n        for (let i = 0; i < this.colorArray.length; i++) bh.colorArray[i] = this.colorArray[i];\r\n        bh.colorBuffer.update();\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    render(): void {\r\n\r\n        if (this.displayObject == null) {\r\n            this.initGraphics();\r\n            this.worldHelper.stage.addChild(this.displayObject);\r\n        }\r\n\r\n    };\r\n\r\n    protected initGraphics() {\r\n\r\n        let vertexArray = new Float32Array(this.anzahlX * this.anzahlY * 4 * 2);\r\n        this.colorArray = new Float32Array(this.anzahlX * this.anzahlY * 4 * 4);\r\n        let vertexIndexArray = new Int32Array(this.anzahlX * this.anzahlY * 6); // Anzahl der Dreieckseckpunkte\r\n\r\n        let xStep = this.width / this.anzahlX;\r\n        let yStep = this.height / this.anzahlY;\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n                let left = x * xStep + this.left;\r\n                let top = y * yStep + this.top;\r\n                let index = (x + y * (this.anzahlX)) * 8;\r\n                vertexArray[index] = left;\r\n                vertexArray[index + 1] = top;\r\n                vertexArray[index + 2] = left + xStep;\r\n                vertexArray[index + 3] = top;\r\n                vertexArray[index + 4] = left;\r\n                vertexArray[index + 5] = top + yStep;\r\n                vertexArray[index + 6] = left + xStep;\r\n                vertexArray[index + 7] = top + yStep;\r\n\r\n                let color = (x + y) % 2;\r\n                index = (x + y * (this.anzahlX)) * 16;\r\n                for (let i = 0; i < 16; i++) {\r\n                    this.colorArray[index + i] = color;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let i: number = 0; // index des Dreieckspunktes\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n\r\n                let index = (x + y * this.anzahlX) * 4;\r\n                i = (x + y * this.anzahlX) * 6;\r\n                vertexIndexArray[i] = index;\r\n                vertexIndexArray[i + 1] = index + 1;\r\n                vertexIndexArray[i + 2] = index + 2;\r\n                vertexIndexArray[i + 3] = index + 1;\r\n                vertexIndexArray[i + 4] = index + 3;\r\n                vertexIndexArray[i + 5] = index + 2;\r\n\r\n            }\r\n        }\r\n\r\n\r\n        let vertexBuffer = new PIXI.Buffer(vertexArray, true);\r\n        this.colorBuffer = new PIXI.Buffer(this.colorArray, false);\r\n        let VertexIndexBuffer = new PIXI.Buffer(vertexIndexArray, true, true);\r\n\r\n\r\n\r\n        const geometry = new PIXI.Geometry()\r\n            .addAttribute('aVertexPosition', // the attribute name\r\n                vertexBuffer, // x, y\r\n                2).addIndex(VertexIndexBuffer) // the size of the attribute\r\n\r\n            .addAttribute('aColor', // the attribute name\r\n                this.colorBuffer,\r\n                4); // the size of the attribute\r\n\r\n        const shader = PIXI.Shader.from(`\r\n    \r\n        precision mediump float;\r\n        attribute vec2 aVertexPosition;\r\n        attribute vec4 aColor;\r\n    \r\n        uniform mat3 translationMatrix;\r\n        uniform mat3 projectionMatrix;\r\n    \r\n        varying vec4 vColor;\r\n    \r\n        void main() {\r\n    \r\n            vColor = aColor;\r\n            gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n    \r\n        }`,\r\n\r\n            `precision mediump float;\r\n    \r\n        varying vec4 vColor;\r\n    \r\n        void main() {\r\n            gl_FragColor = vColor;\r\n        }\r\n    \r\n    `);\r\n\r\n        this.displayObject = new PIXI.Mesh(geometry, shader, null, PIXI.DRAW_MODES.TRIANGLES);\r\n\r\n        this.displayObject.position.set(this.left, this.top);\r\n\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        let r = this.colorArray[i];\r\n        let g = this.colorArray[i + 1];\r\n        let b = this.colorArray[i + 2];\r\n        let a = this.colorArray[i + 3];\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: Math.round(r * 255),\r\n            green: Math.round(g * 255),\r\n            blue: Math.round(b * 255),\r\n            hex: ColorHelper.intColorToHexRGB(Math.round(r * 255) * 0x10000 + Math.round(g * 255) * 0x100 + Math.round(b * 255))\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let r = ((c & 0xff0000) >> 16) / 255;\r\n        let g = ((c & 0xff00) >> 8) / 255;\r\n        let b = ((c & 0xff)) / 255;\r\n\r\n        let r1 = this.colorArray[i];\r\n        let g1 = this.colorArray[i + 1];\r\n        let b1 = this.colorArray[i + 2];\r\n\r\n        return Math.abs(r - r1) < 0.5 && Math.abs(g - g1) < 0.5 && Math.abs(b - b1) < 0.5;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        let r = ((c & 0xff0000) >> 16) / 255;\r\n        let g = ((c & 0xff00) >> 8) / 255;\r\n        let b = ((c & 0xff)) / 255;\r\n\r\n        this.colorArray[i] = r;\r\n        this.colorArray[i + 1] = g;\r\n        this.colorArray[i + 2] = b;\r\n        this.colorArray[i + 3] = alpha;\r\n        this.colorArray[i + 4] = r;\r\n        this.colorArray[i + 5] = g;\r\n        this.colorArray[i + 6] = b;\r\n        this.colorArray[i + 7] = alpha;\r\n        this.colorArray[i + 8] = r;\r\n        this.colorArray[i + 9] = g;\r\n        this.colorArray[i + 10] = b;\r\n        this.colorArray[i + 11] = alpha;\r\n        this.colorArray[i + 12] = r;\r\n        this.colorArray[i + 13] = g;\r\n        this.colorArray[i + 14] = b;\r\n        this.colorArray[i + 15] = alpha;\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n                let i = (x + y * (this.anzahlX)) * 16;\r\n\r\n                let r = ((c & 0xff0000) >> 16) / 255;\r\n                let g = ((c & 0xff00) >> 8) / 255;\r\n                let b = ((c & 0xff)) / 255;\r\n\r\n                this.colorArray[i] = r;\r\n                this.colorArray[i + 1] = g;\r\n                this.colorArray[i + 2] = b;\r\n                this.colorArray[i + 3] = alpha;\r\n                this.colorArray[i + 4] = r;\r\n                this.colorArray[i + 5] = g;\r\n                this.colorArray[i + 6] = b;\r\n                this.colorArray[i + 7] = alpha;\r\n                this.colorArray[i + 8] = r;\r\n                this.colorArray[i + 9] = g;\r\n                this.colorArray[i + 10] = b;\r\n                this.colorArray[i + 11] = alpha;\r\n                this.colorArray[i + 12] = r;\r\n                this.colorArray[i + 13] = g;\r\n                this.colorArray[i + 14] = b;\r\n                this.colorArray[i + 15] = alpha;\r\n            }\r\n        }\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        this.colorArray[i] = r;\r\n        this.colorArray[i + 1] = g;\r\n        this.colorArray[i + 2] = b;\r\n        this.colorArray[i + 3] = alpha;\r\n        this.colorArray[i + 4] = r;\r\n        this.colorArray[i + 5] = g;\r\n        this.colorArray[i + 6] = b;\r\n        this.colorArray[i + 7] = alpha;\r\n        this.colorArray[i + 8] = r;\r\n        this.colorArray[i + 9] = g;\r\n        this.colorArray[i + 10] = b;\r\n        this.colorArray[i + 11] = alpha;\r\n        this.colorArray[i + 12] = r;\r\n        this.colorArray[i + 13] = g;\r\n        this.colorArray[i + 14] = b;\r\n        this.colorArray[i + 15] = alpha;\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let i = (x + y * this.anzahlX) * 16;\r\n        return Math.trunc(this.colorArray[i] * 255) * 0x10000 +\r\n            Math.trunc(this.colorArray[i + 1] * 255) * 0x100 +\r\n            Math.trunc(this.colorArray[i + 2] * 255);\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = '---';\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number = 0x8080ff;\r\n    fillAlpha: number = 1.0;\r\n\r\n    borderColor: number = null;\r\n    borderAlpha: number = 1.0;\r\n    borderWidth: number = 10;\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: mx + r * Math.cos(alpha),\r\n                y: my + r * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            this.addAttribute(new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \" oder \" + ColorHelper.intColorToRGB(intColor)));\r\n        }\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if(max < min){\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: mx + rx*Math.cos(alpha),\r\n                y: my + ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Point, PRECISION, TilingSprite } from \"pixi.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.remove(shape);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    removeElementAt(index: number) {\r\n        if(index < 0 || index >= this.shapes.length){\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if(index < 0 || index >= this.shapes.length){\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n        \r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));     \r\n        shapeHelper.displayObject.transform.onChange();   \r\n        \r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n            \r\n            let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n            \r\n            let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n            \r\n            (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n            let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n            inverseStageTransform.invert();\r\n            shapeHelper.displayObject.localTransform.identity();\r\n            shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n            shapeHelper.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.belongsToGroup = null;\r\n        }\r\n    }\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        super.destroy();\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean){\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n                        rto.initializeAttributeValues();\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: {x: number, y: number}[];\r\n\r\n                for(let i = 0; i < points.length - 1; i += 2){\r\n                        sh.addPoint(points[i].value, points[i+1].value, i >= points.length -2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n     \r\n    }\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if(!closeAndFill){\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(this.hitPolygonInitial.length > 0){\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n    \r\n    setPoint(x: number, y: number, index: number) {\r\n        if(index == 0 || index == 1){\r\n            this.hitPolygonInitial[index] = {x: x, y: y};\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{x: x1,y: y1}, {x: x2,y: y2}];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    public static init(){\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            sound.player = new Howl({src: [sound.url], preload: true})\r\n            SoundTools.soundMap.set(sound.name, sound);\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. Falls scale ungleich 1 ist wird die Bitmap des Sprites VOR dem Rendern um den Faktor scale gestreckt. Dabei wird die nearest neighbour-Interpolation verwendet damit aus Einzelpixeln schöne Quadrate werden. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (fromIndex < toIndex && toIndex - fromIndex < 10000) {\r\n                    for (let i = fromIndex; i < toIndex; i++) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"stopAnimation\")) return;\r\n\r\n                sh.stopAnimation(true);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation und macht das Sprite unsichtbar.', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject,\r\n        public scaleMode: string = \"linear\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.setTexture(null, index);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"];\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"nearest_neighbour\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = 2 * this.animationIndices.length - image;\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).\"', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\"\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            this.textStyle.fill = this.fillColor;\r\n            this.textStyle.stroke = this.borderColor;\r\n            this.textStyle.strokeThickness = this.borderWidth;\r\n            g.alpha = this.fillAlpha;\r\n            this.textStyle.fontSize = this.fontsize;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if(this.text != null){\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n    \r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n        (parameters) => {\r\n            return Date.now() + this.deltaTimeMillis;\r\n        }    \r\n        , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let r: RuntimeObject = parameters[1].value;\r\n            let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n            if (method != null) {\r\n\r\n                module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                    let program = method?.program;\r\n                    let invoke = method?.invoke;\r\n\r\n                    let stackElements: Value[] = [\r\n                        {\r\n                            type: r.class,\r\n                            value: r\r\n                        },\r\n                        {\r\n                            type: stringPrimitiveType,\r\n                            value: key\r\n                        }\r\n                    ];\r\n\r\n                    if (program != null) {\r\n                        module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                    } else if (invoke != null) {\r\n                        invoke([]);\r\n                    }\r\n\r\n\r\n                });\r\n            }\r\n        }    \r\n        , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n\r\n        this.processTimerEntries();\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData)).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData)).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let valueMap: Map<string, Value> = new Map();\r\n                valueMap.set(\"x\", {type: doublePrimitiveType, value: x});\r\n                valueMap.set(\"y\", {type: doublePrimitiveType, value: y});\r\n                o.attributeValues.set(\"Vector2\", valueMap);\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI/180.0;\r\n\r\n                let valueMap: Map<string, Value> = new Map();\r\n                valueMap.set(\"x\", {type: doublePrimitiveType, value: Math.cos(alphaDeg) * r});\r\n                valueMap.set(\"y\", {type: doublePrimitiveType, value: Math.sin(alphaDeg) * r});\r\n                o.attributeValues.set(\"Vector2\", valueMap);\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let angle = Math.atan2(y, x)/Math.PI*180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                return Math.sqrt(x*x+y*y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x*x + y*y);\r\n\r\n                if(Math.abs(length) > 0.00000000001){\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                let valueMap1: Map<string, Value> = new Map();\r\n                valueMap1.set(\"x\", {type: doublePrimitiveType, value: x});\r\n                valueMap1.set(\"y\", {type: doublePrimitiveType, value: y});\r\n                o1.attributeValues.set(\"Vector2\", valueMap1);\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x*x + y*y);\r\n                if(l > 0){\r\n\r\n                    valueMap.get(\"x\").value = x/l*length;\r\n                    valueMap.get(\"y\").value = y/l*length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let o1: RuntimeObject = parameters[1].value;\r\n                let valueMap1: Map<string, Value> = o1.attributeValues.get(\"Vector2\");\r\n                let x1: number = valueMap1.get(\"x\").value;\r\n                let y1: number = valueMap1.get(\"y\").value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                let valueMapRet: Map<string, Value> = new Map();\r\n                valueMapRet.set(\"x\", {type: doublePrimitiveType, value: x + x1});\r\n                valueMapRet.set(\"y\", {type: doublePrimitiveType, value: y + y1});\r\n                oRet.attributeValues.set(\"Vector2\", valueMapRet);\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let o1: RuntimeObject = parameters[1].value;\r\n                let valueMap1: Map<string, Value> = o1.attributeValues.get(\"Vector2\");\r\n                let x1: number = valueMap1.get(\"x\").value;\r\n                let y1: number = valueMap1.get(\"y\").value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                let valueMapRet: Map<string, Value> = new Map();\r\n                valueMapRet.set(\"x\", {type: doublePrimitiveType, value: x - x1});\r\n                valueMapRet.set(\"y\", {type: doublePrimitiveType, value: y - y1});\r\n                oRet.attributeValues.set(\"Vector2\", valueMapRet);\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let o1: RuntimeObject = parameters[2].value;\r\n                let valueMap1: Map<string, Value> = o1.attributeValues.get(\"Vector2\");\r\n                let x1: number = valueMap1.get(\"x\").value;\r\n                let y1: number = valueMap1.get(\"y\").value;\r\n\r\n                return x*x1 + y*y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n        \r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                let valueMapRet: Map<string, Value> = new Map();\r\n                valueMapRet.set(\"x\", {type: doublePrimitiveType, value: x*s});\r\n                valueMapRet.set(\"y\", {type: doublePrimitiveType, value: y*s});\r\n                oRet.attributeValues.set(\"Vector2\", valueMapRet);\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let angle: number = -parameters[1].value*Math.PI/180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                let valueMapRet: Map<string, Value> = new Map();\r\n                valueMapRet.set(\"x\", {type: doublePrimitiveType, value: x*cos - y*sin});\r\n                valueMapRet.set(\"y\", {type: doublePrimitiveType, value: x*sin + y*cos});\r\n                oRet.attributeValues.set(\"Vector2\", valueMapRet);\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n                    \r\n            this.addMethod(new Method(\"distance\", new Parameterlist([\r\n                { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n                    let x1: number = <number>parameters[1].value;\r\n                    let y1: number = <number>parameters[2].value;\r\n                    let x2: number = <number>parameters[3].value;\r\n                    let y2: number = <number>parameters[4].value;\r\n                    let dx = x2 - x1;\r\n                    let dy = y2 - y1;\r\n                    return Math.sqrt(dx*dx+dy*dy);\r\n                }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n            this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n                    let value: RuntimeObject = parameters[2].value;\r\n    \r\n                    wh.setUserData(key, value);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n    \r\n            this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), objectType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n    \r\n                    return wh.getUserData(key);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n            let getterList: { att: string, getter: string, help: string}[] = [{att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\"},\r\n             {att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\"}, \r\n            {att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\"}, {att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\"}  ];\r\n\r\n            for( let getter of getterList){\r\n                this.addMethod(new Method(getter.getter, new Parameterlist([\r\n                ]), stringPrimitiveType,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n        \r\n                        return wh[getter.att];\r\n        \r\n                    }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n            }\r\n\r\n            this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n            ]), intPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n    \r\n                    return wh.index;\r\n    \r\n                }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Index 1). Bemerkung: Der Index ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: {[key: string]: RuntimeObject} = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper, \r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string){\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);       \r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"clients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                clientRuntimeObject.initializeAttributeValues();\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TilingSprite } from \"pixi.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"Processing\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n            this.interpreter.timerExtern = true;\r\n            this.setupProcessing(this.$containerInner);\r\n        }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n            let that = this;\r\n            let drawMethodPending: boolean = true;\r\n            this.$div = $div;\r\n\r\n            let sketch = (p5: p5) => {\r\n\r\n                p5.setup = function () {\r\n                    that.renderer = p5.P2D;\r\n\r\n                    let afterFinishingBoth = () => {\r\n                        // p5.createCanvas(that.width, that.height, that.renderer);\r\n                        drawMethodPending = false\r\n                        // $div.find('canvas').css({\r\n                        //     'width': '',\r\n                        //     'height': ''\r\n                        // })            \r\n                    }\r\n\r\n                    let i = 2;\r\n\r\n                    that.runMethod('setup', () => {\r\n                        if (--i == 0) afterFinishingBoth();\r\n                    });\r\n\r\n                    that.runMethod('settings', () => {\r\n                        if (--i == 0) afterFinishingBoth();\r\n                    });\r\n\r\n\r\n                };\r\n\r\n                p5.preload = function () {\r\n                    that.runMethod('preload');\r\n                };\r\n\r\n                p5.draw = function () {\r\n                    if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                        if (!drawMethodPending) {\r\n                            drawMethodPending = true;\r\n                            that.runMethod(\"draw\", () => {\r\n                                drawMethodPending = false;\r\n                            });\r\n                        }\r\n                    }\r\n                    that.tick();\r\n                    // p5.background(50);\r\n                    // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n                };\r\n\r\n                p5.mousePressed = function () {\r\n                    that.runMethod('mousePressed');\r\n                };\r\n\r\n                p5.mouseReleased = function () {\r\n                    that.runMethod('mouseReleased');\r\n                };\r\n\r\n                p5.mouseClicked = function () {\r\n                    that.runMethod('mouseClicked');\r\n                };\r\n\r\n                p5.mouseDragged = function () {\r\n                    that.runMethod('mouseDragged');\r\n                };\r\n\r\n                p5.mouseEntered = function () {\r\n                    that.runMethod('mouseEntered');\r\n                };\r\n\r\n                p5.mouseExited = function () {\r\n                    that.runMethod('mouseExited');\r\n                };\r\n\r\n                p5.mouseMoved = function () {\r\n                    that.runMethod('mouseMoved');\r\n                };\r\n\r\n                p5.keyPressed = function () {\r\n                    that.runMethod('keyPressed');\r\n                };\r\n\r\n                p5.keyReleased = function () {\r\n                    that.runMethod('keyReleased');\r\n                };\r\n\r\n\r\n            }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n            $div.find('canvas').css({\r\n                'width': '',\r\n                'height': ''\r\n            })\r\n\r\n        }\r\n\r\n\r\n    tick() {\r\n\r\n            if(this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    angle: number = 0;\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter;\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.drawTurtle(xStart, yStart, this.angle);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    calculateCenter(){\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum/length;\r\n        this.centerYInitial = this.ySum/length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean){\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angle: number) {\r\n        this.angle -= angle / 180 * Math.PI;\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        this.turn(this.angle);\r\n        let lastLineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.drawTurtle(lastLineElement.x, lastLineElement.y, this.angle);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(this.angle),\r\n            y: lastLineElement.y + length * Math.sin(this.angle),\r\n            color: this.borderColor,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        if (this.isFilled) {\r\n            this.render();\r\n        } else {\r\n            if (this.borderColor != null) {\r\n                this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n                this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n                this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n            }\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.drawTurtle(newLineElement.x, newLineElement.y, this.angle);\r\n\r\n    }\r\n\r\n    drawTurtle(x: number, y: number, angle: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let vx = Math.cos(angle);\r\n        let vy = Math.sin(angle);\r\n\r\n        let vxp = -Math.sin(angle);\r\n        let vyp = Math.cos(angle);\r\n\r\n        let lengthForward = 20;\r\n        let lengthBackward = 10;\r\n        let lengthBackwardP = 10;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if(shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty){\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if(this.initialHitPolygonDirty){\r\n            this.setupInitialHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon(){\r\n        this.hitPolygonInitial = this.lineElements.map((le) => {return {x: le.x, y: le.y}});\r\n    }\r\n\r\n}\r\n","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean = true) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.identifier), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.identifier), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.identifier), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(\"mousedown\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focuslost.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n        if (ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focuslost.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        let newValue = <string>$input.val();\r\n        renameDoneCallback(newValue);\r\n        elementToReplace.show()\r\n        $input.remove();\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number):JQuery<HTMLElement> {\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if(mi.link != null){\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") +  '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if(mi.link == null){\r\n            $item.on('mousedown.contextmenu', () => {\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(\"mousedown.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(\"mousedown\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n\r\n        }\r\n        \r\n        $item.on('mousemove.contextmenu', () => {\r\n            if(mi != parentMenuItem && $openSubMenu != null){\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if(mi.subMenu != null){\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(\"mousedown.contextmenu\", () => {\r\n        jQuery(document).off(\"mousedown.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n    \r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(\"mousedown.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    headings.on(\"mousedown\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: {[id: string]: any}): JQuery<HTMLDivElement>{\r\n\r\n    let s = \"\";\r\n    if(id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if(klass != null && klass != \"\") s += ` class=\"${klass}\"`; \r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if(css !=  null){\r\n        div.css(css);\r\n    }\r\n\r\n    if(text != null && text != \"\"){\r\n        div.text(text);\r\n    }\r\n    \r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>){\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\" id=\"workspace\">\r\n        <span>` + this.caption + `</span><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            this.$buttonNew.on('mousedown', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\"\r\n                }\r\n\r\n                that.elements.push(ae);\r\n\r\n                let $element = that.renderElement(ae);\r\n                that.$listElement.prepend($element);\r\n\r\n                that.$listElement.scrollTop(0);\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n\r\n        $ce.on('mousedown', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    addElement(element: AccordionElement) {\r\n        this.elements.push(element);\r\n        element.$htmlFirstLine = this.renderElement(element);\r\n        this.$listElement.prepend(element.$htmlFirstLine);\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement): JQuery<HTMLElement> {\r\n\r\n        let that = this;\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass}\">\r\n        <div class=\"jo_fileimage\"></div><div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active\"></div>' : \"\"}\r\n        </div>`);\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        element.$htmlFirstLine.on('mousedown', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n            }\r\n        });\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (that.contextMenuProvider != null) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        }, false);\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on('mousedown', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if(ae != null){\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n    \r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string){\r\n        if(element != null){\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n        \r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('span').html(text);\r\n    }\r\n\r\n    getSelectedElementData(): any {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor($html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion($debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null)\r\n            that.executeKeyDownEvent(event); \r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\" && this.main.isEmbedded()){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Identifier: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.identifier), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.identifier), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.identifier), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            renderIndentGuides: false,\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            fontFamily: \"Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        this.$consoleTabHeading.trigger(\"mousedown\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace)\r\n                .map(ci => {\r\n                    ci.sortText = \"aa\" + ci.label;\r\n                    return ci;\r\n                })\r\n                );\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($0);\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($0);\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.getMethods()) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { System } from \"pixi.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule().file.id;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n        \r\n        if(this.main.isEmbedded()) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        that.$outer.on('mousedown', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger('mousedown', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on('mousedown', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on('mousemove.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.speedcontrol', () => {\r\n                jQuery(document).off('mouseup.speedcontrol');\r\n                jQuery(document).off('mousemove.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.interpreter.stepsPerSecond = speed;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(speed);\r\n        if(speed >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n        \r\n        $zoomcontrolBar.on('mousedown', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger('mousedown', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on('mousedown', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on('mousemove.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.zoomcontrol', () => {\r\n                jQuery(document).off('mouseup.zoomcontrol');\r\n                jQuery(document).off('mousemove.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(\"mouseenter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(\"mouseleave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n                line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute){\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : \"\") + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass)}\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + a.identifier;\r\n                text += \":\" + a.type.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a)}\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface,\r\n                    onClick: this.isSystemClass ? undefined : () => {this.jumpToDeclaration(m)}\r\n                });\r\n\r\n            }); \r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if(event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                s += this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[], \r\n    displaySystemClasses: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[]\r\n    displaySystemClasses: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            openContextMenu([{\r\n                caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                callback: () => {\r\n                    that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                    that.drawDiagram(that.currentWorkspace, false);\r\n                }\r\n            }\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout(){\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                for (let cb of cbs.active) {\r\n                    cb.detach();\r\n                }\r\n                for (let cb of cbs.inactive) {\r\n                    cb.detach();\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.currentClassBoxes.displaySystemClasses){\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n         \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while(arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributeValues[k.identifier][a.identifier];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider\", () => {\r\n                jQuery(document).off(\"mousemove.slider\");\r\n                jQuery(document).off(\"mouseup.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    id?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule){};\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        this.indexedDB = new EmbeddedIndexedDB();\r\n        this.indexedDB.open(() => {\r\n\r\n            if (this.config.id != null) {\r\n                this.readScripts();\r\n            }\r\n\r\n        });\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.withFileList == null) this.config.withFileList = true;\r\n        if (this.config.withPCode == null) this.config.withPCode = true;\r\n        if (this.config.withConsole == null) this.config.withConsole = true;\r\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\r\n\r\n        if (!(this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList)) {\r\n            this.config.withBottomPanel = false;\r\n        }\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            this.config.withFileList = false;\r\n            this.config.withPCode = false;\r\n            this.config.withConsole = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n        \r\n        \r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            $centerDiv.prepend($controlsDiv);\r\n            $controlsDiv.addClass('joe_controlPanel_top');\r\n            $editorDiv.css({\r\n                'position': 'relative',\r\n                'height': '1px'\r\n            });\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            jQuery('.jo_graphics').trigger('sizeChanged');\r\n            this.editor.editor.layout();\r\n        });\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über Java-Online ...\",\r\n                link: \"https://java.mathe-pabst.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }}], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-right: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n        let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n        $tabheadings.append($thRun, $thVariables);\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n\r\n        let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n            <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n            <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n            </ul>\r\n            </div>\r\n        `);\r\n\r\n        $vd.append(this.$debuggerDiv, $alternativeText);\r\n\r\n        this.$runDiv = jQuery(\r\n            `\r\n<div class=\"jo_tab jo_active jo_run\">\r\n<div class=\"jo_run-programend\">Programm beendet</div>\r\n<div class=\"jo_run-input\">\r\n    <div>\r\n        <div>\r\n            <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n            <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n            <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n                <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n            </div>\r\n\r\n            <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n        </div>\r\n    </div>\r\n</div> \r\n<div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n</div>\r\n\r\n</div>\r\n\r\n`);\r\n\r\n        $tabs.append(this.$runDiv, $vd);\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel{\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: \"spriteLibrary.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.java.mathe-pabst.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.java.mathe-pabst.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.java.mathe-pabst.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.java.mathe-pabst.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: \"statistics.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n                let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n                if(!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)){\r\n                    let module: Module = <Module>accordionElement.externalElement;\r\n                    let file = module.file;\r\n\r\n                    if(file.submitted_date == null){\r\n                        cmiList.push({\r\n                            caption: \"Als Hausaufgabe markieren\",\r\n                            callback: (element: AccordionElement) => {\r\n\r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = dateToString(new Date());\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        cmiList.push({\r\n                            caption: \"Hausaufgabenmarkierung entfernen\",\r\n                            callback: (element: AccordionElement) => {\r\n                                \r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = null;\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                                \r\n                            }\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return cmiList;\r\n            }    \r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n        this.$synchronizeAction.on('mousedown', (e) => {\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if(file.submitted_date != null){\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if(file.text_before_revision){\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        } \r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if(klass.indexOf(\"jo_active\") >= 0){\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"2\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if(that.main.workspacesOwnerId != null){\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                that.main.networkManager.sendUpdates(() => {\r\n                    that.setWorkspaceActive(workspace);\r\n                });\r\n            }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('mousedown', (e) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository'\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement);\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n\r\n            if(this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0){\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" + \r\n                                                      dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                {\r\n                    caption: \"An einzelne Schüler/innen austeilen...\",\r\n                    callback: (element: AccordionElement) => { \r\n                        let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                        let workspace: Workspace = element.externalElement;\r\n                        new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                    }\r\n                }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => { \r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                                    // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                                    //     if (error == null) {\r\n                                    //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                                    //         workspace.renderSynchronizeButton();\r\n                                    //         this.showRepositoryButtonIfNeeded(workspace);\r\n                                    //     } else {\r\n                                    //         alert(error);\r\n                                    //     }\r\n                                    // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository'\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace){\r\n        if(w.repository_id != null && w.owner_id == this.main.user.id){\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if(m.file.text_before_revision != null){\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WORKSPACES\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        jQuery('#slider1').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let pe = jQuery('#leftpanel');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(\"mousemove.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let width = Number.parseInt(pe.css('width').replace('px', ''));\r\n                pe.css('width', (width + dx) + \"px\");\r\n\r\n                let mewidth = Number.parseInt(me.css('width').replace('px', ''));\r\n                me.css('width', (mewidth - dx) + \"px\");\r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider1\", () => {\r\n                jQuery(document).off(\"mousemove.slider1\");\r\n                jQuery(document).off(\"mouseup.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let ee = jQuery('#bottomdiv-outer');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                let height = Number.parseInt(ee.css('height').replace('px', ''));\r\n                ee.css('height', (height - dy) + \"px\");\r\n\r\n                let meheight = Number.parseInt(me.css('height').replace('px', ''));\r\n                me.css('height', (meheight + dy) + \"px\");\r\n\r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider2\", () => {\r\n                jQuery(document).off(\"mousemove.slider2\");\r\n                jQuery(document).off(\"mouseup.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let pe = jQuery('#rightdiv');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(\"mousemove.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                let width = Number.parseInt(pe.css('width').replace('px', ''));\r\n                pe.css('width', (width - dx) + \"px\");\r\n\r\n                let mewidth = Number.parseInt(me.css('width').replace('px', ''));\r\n                me.css('width', (mewidth + dx) + \"px\");\r\n                \r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                width += dx;\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider3\", () => {\r\n                jQuery(document).off(\"mousemove.slider3\");\r\n                jQuery(document).off(\"mouseup.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.rufname + \" \" + ud.familienname,\r\n                externalElement: ud\r\n            }\r\n            this.studentPanel.addElement(ae);\r\n        }\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd\r\n            }\r\n            this.classPanel.addElement(ae);\r\n        }\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val()\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                    jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                                consoleHelperDone: false,\r\n                                newFileHelperDone: false,\r\n                                newWorkspaceHelperDone: false,\r\n                                speedControlHelperDone: false,\r\n                                homeButtonHelperDone: false,\r\n                                stepButtonHelperDone: false,\r\n                                repositoryButtonDone: false\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        jQuery('#bitteWarten').hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                        if (user.settings.classDiagram != null) {\r\n                            that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                        }\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    jQuery('#login').show();\r\n                    jQuery('#bitteWarten').css('display', 'none');\r\n                    jQuery('#login-message').empty();\r\n                    this.main.interpreter.setState(InterpreterState.not_initialized);\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n                    this.main.bottomDiv?.console?.clear();\r\n                    this.main.interpreter.printManager.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Repository } from \"../../communication/Data.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { HistoryElement } from \"./HistoryElement.js\";\r\nimport { RepositoryHistoryEntry, RepositoryFileEntry, CommitFilesResponse, CommitFilesRequest } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { SynchronizationManager } from \"./RepositorySynchronizationManager.js\";\r\n\r\n\r\nexport type SynchroFileState = \"original\" | \"changed\" | \"new\" | \"deleted\";\r\n\r\nexport type SynchroFile = {\r\n    idInsideRepository: number,\r\n    idInsideWorkspace?: number,\r\n    workspaceFile: File,\r\n    committedFromFile?: SynchroFile,\r\n    name: string,\r\n    repository_file_version: number,\r\n    identical_to_repository_version: boolean,\r\n    text: string,\r\n    synchroWorkspace: SynchroWorkspace,\r\n    \r\n    state: SynchroFileState,\r\n    markedAsMerged: boolean,\r\n\r\n    originalText?: string,\r\n    monacoModel?: monaco.editor.ITextModel,\r\n}\r\n\r\n\r\nexport class SynchroWorkspace {\r\n\r\n    files: SynchroFile[] = [];\r\n    copiedFromWorkspace: Workspace;\r\n    isCurrentRepositoryVersion: boolean = false;\r\n\r\n    name: string;\r\n\r\n    constructor(private manager: SynchronizationManager) {\r\n\r\n    }\r\n\r\n    hasChanges(): boolean {\r\n        for(let file of this.files){\r\n            if(file.state != \"original\") return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    isWritable(): boolean {\r\n        return this.copiedFromWorkspace != null || (this.isCurrentRepositoryVersion && this.manager.repositoryIsWritable );\r\n    }\r\n\r\n    copyFromWorkspace(workspace: Workspace):SynchroWorkspace {\r\n\r\n        this.files = [];\r\n        workspace.moduleStore.getModules(false).forEach(module => {\r\n            let file = module.file;\r\n\r\n            if (module.model != null) {\r\n                module.file.text = module.getProgramTextFromMonacoModel();\r\n            }\r\n\r\n            this.files.push({\r\n                name: file.name,\r\n                repository_file_version: file.repository_file_version,\r\n                identical_to_repository_version: file.identical_to_repository_version,\r\n                idInsideRepository: file.is_copy_of_id,\r\n                idInsideWorkspace: file.id,\r\n                workspaceFile: file,\r\n                text: file.text.replace(/\\r\\n/g, \"\\n\"),\r\n                synchroWorkspace: this,\r\n                \r\n                state: \"original\",\r\n                markedAsMerged: false,\r\n\r\n                originalText: file.text,\r\n                monacoModel: null\r\n            })\r\n        });\r\n\r\n        this.name = \"Workspace: \" + workspace.name;\r\n        this.copiedFromWorkspace = workspace;\r\n\r\n        return this;\r\n    }\r\n\r\n    copyFromRepository(repository: Repository, isCurrentRepositoryVersion: boolean): SynchroWorkspace {\r\n        this.isCurrentRepositoryVersion = isCurrentRepositoryVersion;\r\n        this.files = [];\r\n        repository.fileEntries.forEach((fileEntry) => {\r\n            this.files.push({\r\n                name: fileEntry.filename,\r\n                idInsideRepository: fileEntry.id,\r\n                idInsideWorkspace: null,\r\n                workspaceFile: null,\r\n                repository_file_version: fileEntry.version,\r\n                identical_to_repository_version: true,\r\n                text: fileEntry.text.replace(/\\r\\n/g, \"\\n\"),\r\n                synchroWorkspace: this,\r\n                \r\n                state: \"original\",\r\n                markedAsMerged: false,\r\n\r\n                monacoModel: null\r\n            })\r\n        })\r\n\r\n        this.name = \"Repository: \" + repository.name + \" (V \" + repository.version + \")\";\r\n\r\n        return this;\r\n    }\r\n\r\n    copyFromHistoryElement(historyElement: HistoryElement): SynchroWorkspace {\r\n        let repo = historyElement.getRepositoryState();\r\n        this.copyFromRepository(repo, false);\r\n        this.name = \"History-Version \" + repo.version;\r\n        return this;\r\n    }\r\n\r\n    commit(workspace: Workspace, oldRepository: Repository, comment: string, main: Main,\r\n        callback: (repository: Repository, errormessage: string) => void) {\r\n\r\n        let oldIdToFileMap: { [id: number]: RepositoryFileEntry } = {};\r\n        let newIdToFileMap: { [id: number]: SynchroFile } = {};\r\n\r\n        let newlyVersionedFileIds: number[] = [];\r\n\r\n        oldRepository.fileEntries.forEach(file => oldIdToFileMap[file.id] = file);\r\n        this.files.forEach(file => {\r\n            if (file.idInsideRepository != null) {\r\n                newIdToFileMap[file.idInsideRepository] = file;\r\n            }\r\n        });\r\n\r\n        let repositoryHistoryEntry: RepositoryHistoryEntry = {\r\n            comment: comment,\r\n            name: main.user.rufname + \" \" + main.user.familienname,\r\n            username: main.user.username,\r\n            isIntermediateEntry: false,\r\n            timestamp: new Date().toUTCString(),\r\n            userId: main.user.id,\r\n            version: oldRepository.version + 1,\r\n            historyFiles: []\r\n        }\r\n\r\n        for (let file of this.files) {\r\n            if(file.state == \"deleted\") continue;\r\n\r\n            let oldFile = oldIdToFileMap[file.idInsideRepository];\r\n            if (oldFile == null) {\r\n\r\n                // if file.committedFromFile.\r\n                if (file.idInsideRepository == null) {\r\n                    newlyVersionedFileIds.push(file.committedFromFile.idInsideWorkspace);\r\n                    file.committedFromFile.idInsideRepository = file.committedFromFile.idInsideWorkspace;\r\n                    file.committedFromFile.repository_file_version = 1;\r\n                    file.idInsideRepository = file.committedFromFile.idInsideWorkspace;\r\n                    file.committedFromFile.idInsideRepository = file.committedFromFile.idInsideWorkspace;\r\n                }\r\n\r\n                repositoryHistoryEntry.historyFiles.push({\r\n                    id: file.idInsideRepository,\r\n                    type: \"create\",\r\n                    version: 1,\r\n                    content: file.text,\r\n                    filename: file.name\r\n                });\r\n            } else if (oldFile.text != file.text) {\r\n                oldFile.version++;\r\n                let patch: string = this.getPatch(oldFile.text, file.text);\r\n                if (patch == null) {\r\n                    repositoryHistoryEntry.historyFiles.push({\r\n                        id: oldFile.id,\r\n                        type: \"intermediate\",\r\n                        version: oldFile.version,\r\n                        content: file.text,\r\n                        filename: file.name\r\n                    });\r\n                } else {\r\n                    repositoryHistoryEntry.historyFiles.push({\r\n                        id: oldFile.id,\r\n                        type: \"change\",\r\n                        version: oldFile.version,\r\n                        content: patch,\r\n                        filename: (oldFile.filename == file.name) ? undefined : file.name\r\n                    });\r\n                }\r\n\r\n                let cff = file.committedFromFile;\r\n                if(cff != null){\r\n                    cff.repository_file_version = oldFile.version;\r\n                    cff.workspaceFile.repository_file_version = oldFile.version;\r\n                    cff.workspaceFile.saved = false;                    \r\n                }\r\n\r\n            } else if (oldFile.filename != file.name) {\r\n                repositoryHistoryEntry.historyFiles.push({\r\n                    id: oldFile.id,\r\n                    type: \"intermediate\",\r\n                    version: oldFile.version,\r\n                    filename: file.name\r\n                });\r\n            }\r\n        }\r\n\r\n        for (let oldFile of oldRepository.fileEntries) {\r\n            if (newIdToFileMap[oldFile.id] == null || newIdToFileMap[oldFile.id].state == \"deleted\") {\r\n                repositoryHistoryEntry.historyFiles.push({\r\n                    id: oldFile.id,\r\n                    type: \"delete\",\r\n                    version: oldFile.version\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        let newFileEntries: RepositoryFileEntry[] = this.files.filter(file => file.state != \"deleted\").map((synchroFile) => {\r\n            return {\r\n                filename: synchroFile.name,\r\n                id: synchroFile.idInsideRepository,\r\n                text: synchroFile.text,\r\n                version: synchroFile.repository_file_version\r\n            }\r\n        })\r\n\r\n\r\n        let commitFilesRequest: CommitFilesRequest = {\r\n            files: newFileEntries,\r\n            repositoryVersionBeforeCommit: oldRepository.version,\r\n            repository_id: oldRepository.id,\r\n            workspace_id: workspace.id,\r\n            repositoryHistoryEntry: repositoryHistoryEntry,\r\n            newlyVersionedFileIds: newlyVersionedFileIds\r\n        }\r\n\r\n        let that = this;\r\n        ajax(\"commitFiles\", commitFilesRequest, (cfr: CommitFilesResponse) => {\r\n            workspace.moduleStore.getModules(false).map(m => m.file).forEach((file) => {\r\n                if (newlyVersionedFileIds.indexOf(file.id) >= 0) {\r\n                    file.is_copy_of_id = file.id;\r\n                    file.repository_file_version = 1;\r\n                    file.identical_to_repository_version = true;\r\n                    file.saved = false;\r\n                }\r\n            });\r\n            that.manager.currentUserSynchroWorkspace.files.forEach(synchroFile => {\r\n                let workspaceFile = synchroFile.workspaceFile;\r\n                if(workspaceFile != null){\r\n                    if(synchroFile.text == workspaceFile.text && \r\n                        (synchroFile.repository_file_version != workspaceFile.repository_file_version  || synchroFile.identical_to_repository_version != workspaceFile.identical_to_repository_version)){\r\n                            workspaceFile.identical_to_repository_version = synchroFile.identical_to_repository_version;\r\n                            workspaceFile.repository_file_version = synchroFile.repository_file_version;\r\n                            workspaceFile.saved = false;\r\n                    }\r\n                }\r\n            });\r\n            that.manager.main.networkManager.sendUpdates(() => {\r\n                callback(cfr.repository, null);\r\n            }, true);\r\n        }, (error: string) => { callback( null, error) })\r\n\r\n    }\r\n\r\n    getPatch(contentOld: string, contentNew: string): string {\r\n        //@ts-ignore\r\n        let dmp: diff_match_patch = new diff_match_patch();\r\n        //@ts-ignore\r\n        let patchObject: patch_obj[] = dmp.patch_make(contentOld, contentNew);\r\n\r\n        let patch: string = JSON.stringify(patchObject);\r\n\r\n        // Test patch and only return it if it is valid!\r\n        let deSerializedPatchObject = JSON.parse(patch);\r\n\r\n        let result: [string, boolean[]] = dmp.patch_apply(deSerializedPatchObject, contentOld);\r\n\r\n        if (result == null || result[0] == null) return null;\r\n\r\n        if (result[0] == contentNew) {\r\n            return patch;\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    writeChangesToWorkspace() {\r\n        let workspace = this.copiedFromWorkspace;\r\n        let oldIdToModuleMap: { [id: number]: Module } = {};\r\n        let newIdToFileMap: { [id: number]: SynchroFile } = {};\r\n\r\n        workspace.moduleStore.getModules(false).forEach(m => {\r\n            if (m.file.is_copy_of_id != null) oldIdToModuleMap[m.file.is_copy_of_id] = m;\r\n        });\r\n\r\n        this.files.forEach(file => {\r\n            if (file.idInsideWorkspace != null) newIdToFileMap[file.idInsideWorkspace] = file;\r\n        });\r\n\r\n        let main = this.manager.main;\r\n        for (let module of workspace.moduleStore.getModules(false)) {\r\n\r\n            let synchroFile = newIdToFileMap[module.file.id];\r\n            if (synchroFile != null) {\r\n                module.file.text = synchroFile.monacoModel.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n                synchroFile.text = module.file.text;\r\n                module.file.is_copy_of_id = synchroFile.idInsideRepository;\r\n                module.file.repository_file_version = synchroFile.repository_file_version;\r\n                module.model.setValue(synchroFile.text);\r\n                module.file.identical_to_repository_version = synchroFile.identical_to_repository_version;\r\n                module.file.saved = false;\r\n            } else {\r\n\r\n                main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        workspace.moduleStore.removeModule(module);\r\n                        if (main.currentWorkspace == workspace && main.projectExplorer.getCurrentlyEditedModule() == module) {\r\n                            main.projectExplorer.setModuleActive(null);\r\n                        }\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        for (let synchroFile of this.files) {\r\n            if (synchroFile.idInsideRepository != null && oldIdToModuleMap[synchroFile.idInsideRepository] == null) {\r\n\r\n                let f: File = {\r\n                    name: synchroFile.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: synchroFile.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: synchroFile.idInsideRepository,\r\n                    repository_file_version: synchroFile.repository_file_version,\r\n                    identical_to_repository_version: synchroFile.identical_to_repository_version\r\n                };\r\n                let m = new Module(f, main);\r\n                workspace.moduleStore.putModule(m);\r\n                main.networkManager.sendCreateFile(m, workspace, main.user.id,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            }\r\n        }\r\n\r\n        main.networkManager.sendUpdates(null, true);\r\n\r\n        if (main.currentWorkspace == workspace) {\r\n            let cem = main.getCurrentlyEditedModule();\r\n            main.projectExplorer.setWorkspaceActive(workspace);\r\n\r\n            // if module hadn't been deleted while synchronizing:\r\n            if(workspace.moduleStore.getModules(false).indexOf(cem) >= 0){\r\n                main.projectExplorer.setModuleActive(cem);\r\n                main.projectExplorer.fileListPanel.select(cem, false);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}","import { RepositoryHistoryEntry, Repository, RepositoryHistoryFileEntry, RepositoryFileEntry } from \"../../communication/Data.js\";\r\nimport { SynchronizationManager } from \"./RepositorySynchronizationManager.js\";\r\nimport { makeDiv, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { SynchroWorkspace } from \"./SynchroWorkspace.js\";\r\n\r\nexport class HistoryElement {\r\n\r\n    $historyElementDiv: JQuery<HTMLDivElement>;\r\n\r\n    static currentlyDragged: HistoryElement;\r\n\r\n    constructor(private manager: SynchronizationManager, private repository: Repository, private repositoryHistoryEntry: RepositoryHistoryEntry, private historyEntryIndex: number) {\r\n\r\n        this.$historyElementDiv = makeDiv(null, \"jo_synchro_historyElement\");\r\n        this.$historyElementDiv.attr(\"draggable\", \"true\");\r\n\r\n        let that = this;\r\n        this.$historyElementDiv.on('drag', () => {\r\n            HistoryElement.currentlyDragged = that;\r\n        });\r\n\r\n        let line1 = makeDiv(null, \"jo_synchro_historyElementLine1\");\r\n        line1.append(jQuery(`<div class=\"jo_synchro_he_version\">V ${repositoryHistoryEntry.version}</div>`));\r\n        line1.append(jQuery(`<div class=\"jo_synchro_he_name\">${repositoryHistoryEntry.name}</div>`));\r\n        this.$historyElementDiv.append(line1);\r\n\r\n        let line2 = makeDiv(null, \"jo_synchro_historyElementLine2\");\r\n        line2.append(jQuery(`<div class=\"jo_synchro_he_timestamp\">${repositoryHistoryEntry.timestamp}</div>`))\r\n        this.$historyElementDiv.append(line2);\r\n\r\n        let line3 = makeDiv(null, \"jo_synchro_historyElementLine3\");\r\n        line3.append(jQuery(`<div class=\"jo_synchro_he_comment\">${repositoryHistoryEntry.comment}</div>`))\r\n        this.$historyElementDiv.append(line3);\r\n\r\n        manager.$historyScrollDiv.prepend(this.$historyElementDiv);\r\n\r\n        this.$historyElementDiv.on(\"click contextmenu\", (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([\r\n                {\r\n                    caption: \"Auf der linken Seite darstellen\",\r\n                    callback: () => {\r\n                        let sw = new SynchroWorkspace(this.manager).copyFromHistoryElement(this);\r\n                        this.manager.leftSynchroWorkspace = sw;\r\n                        this.manager.setupSynchronizationListElements();\r\n                    }\r\n                },\r\n                {\r\n                    caption: \"Auf der rechten Seite darstellen\",\r\n                    callback: () => {\r\n                        let sw = new SynchroWorkspace(this.manager).copyFromHistoryElement(this);\r\n                        this.manager.rightSynchroWorkspace = sw;\r\n                        this.manager.setupSynchronizationListElements();\r\n                    }\r\n                },\r\n            ],\r\n                ev.pageX + 2, ev.pageY + 2)\r\n        });\r\n\r\n    }\r\n\r\n    getRepositoryState(): Repository {\r\n\r\n        let entries = this.repository.historyEntries;\r\n\r\n        // get last intermediate state\r\n        let startIndex = this.historyEntryIndex;\r\n\r\n        while (startIndex > 0 && !(entries[startIndex].isIntermediateEntry)) {\r\n            startIndex--;\r\n        }\r\n\r\n        let files: RepositoryFileEntry[] = [];\r\n\r\n        for (let index = startIndex; index <= this.historyEntryIndex; index++) {\r\n\r\n            let entry = entries[index];\r\n            for (let fileEntry of entry.historyFiles) {\r\n\r\n                if (entry.isIntermediateEntry) {\r\n                    this.setIntermediateState(fileEntry, files);\r\n                } else {\r\n                    switch (fileEntry.type) {\r\n                        case \"create\":\r\n                            this.createFile(fileEntry, files);\r\n                            break;\r\n                        case \"delete\":\r\n                            this.deleteFile(fileEntry, files);\r\n                            break;\r\n                        case \"change\":\r\n                            this.changeFile(fileEntry, files);\r\n                            break;\r\n                        case \"intermediate\":\r\n                            this.setIntermediateState(fileEntry, files);\r\n                            break;\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let repository: Repository = Object.assign({}, this.repository);\r\n        repository.fileEntries = files;\r\n        repository.version = this.repositoryHistoryEntry.version;\r\n\r\n        return repository;\r\n\r\n    }\r\n\r\n    setIntermediateState(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let file: RepositoryFileEntry = files.find(file => file.id == fileEntry.id);\r\n        if (file != null) {\r\n            file.text = fileEntry.content;\r\n            file.version = fileEntry.version;\r\n        }\r\n    }\r\n\r\n    changeFile(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let file: RepositoryFileEntry = files.find(file => file.id == fileEntry.id);\r\n        if (file != null) {\r\n            if (fileEntry.content != null) {\r\n                //@ts-ignore\r\n                let patch: patch_obj[] = JSON.parse(fileEntry.content);\r\n                let oldText = file.text;\r\n                //@ts-ignore\r\n                let dmp: diff_match_patch = new diff_match_patch();\r\n                let newText: [string, boolean[]] = dmp.patch_apply(patch, oldText);\r\n                file.text = newText[0];\r\n                file.version = fileEntry.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteFile(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let index: number = files.findIndex(file => file.id == fileEntry.id);\r\n        if (index != null) {\r\n            files.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    createFile(fileEntry: RepositoryHistoryFileEntry, files: RepositoryFileEntry[]) {\r\n        let file: RepositoryFileEntry = {\r\n            id: fileEntry.id,\r\n            text: fileEntry.content,\r\n            filename: fileEntry.filename,\r\n            version: fileEntry.version\r\n        }\r\n        files.push(file);\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Repository } from \"../../communication/Data.js\";\r\n\r\nexport class RepositoryTool {\r\n\r\n    static deserializeRepository(repo: Repository) {\r\n\r\n        if (repo.files != null && repo.files.startsWith('[')) {\r\n            repo.fileEntries = JSON.parse(repo.files);\r\n        } else {\r\n            repo.fileEntries = [];\r\n        }\r\n\r\n        repo.fileEntries.forEach(fe => fe.text = fe.text.replace(/\\r\\n/g, \"\\n\"));\r\n\r\n        if (!repo.history.endsWith(\"]\")) repo.history += \"]\";\r\n        repo.historyEntries = JSON.parse(repo.history);\r\n\r\n    }\r\n\r\n    static copyRepository(repo: Repository, withHistoryElements: boolean): Repository {\r\n\r\n        let crepo: Repository = Object.assign({}, repo);\r\n\r\n        if (repo.fileEntries != null) {\r\n            crepo.fileEntries = [];\r\n            for (let fe of repo.fileEntries) {\r\n                crepo.fileEntries.push(Object.assign({}, fe));\r\n            }\r\n        }\r\n\r\n        if (repo.historyEntries != null && withHistoryElements) {\r\n            crepo.historyEntries = [];\r\n            for (let he of repo.historyEntries) {\r\n                let che = Object.assign({}, he);\r\n\r\n                if (he.historyFiles != null) {\r\n                    che.historyFiles = [];\r\n                    for (let hfe of he.historyFiles) {\r\n                        che.historyFiles.push(Object.assign({}, hfe));\r\n                    }\r\n                }\r\n\r\n                crepo.historyEntries.push(che);\r\n            }\r\n        }\r\n\r\n        return crepo;\r\n\r\n    }\r\n\r\n    \r\n}","import { TeachersWithClassesMI } from \"../../administration/TeachersWithClasses.js\";\r\nimport { RepositoryFileEntry } from \"../../communication/Data.js\";\r\nimport { File } from \"../../compiler/parser/Module.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { SynchronizationManager } from \"./RepositorySynchronizationManager.js\";\r\nimport { SynchroFile, SynchroWorkspace } from \"./SynchroWorkspace.js\";\r\n\r\ntype ButtonKind = \"create\" | \"delete\" | \"update\" | \"commit\" | \"updateAll\" | \"commitAll\";\r\nexport type LeftRight = \"left\" | \"right\";\r\n\r\n\r\nexport class SynchronizationListElement {\r\n\r\n    $leftFileDiv: JQuery<HTMLDivElement>;\r\n    $rightFileDiv: JQuery<HTMLDivElement>;\r\n    $buttonLeftDiv: JQuery<HTMLDivElement>;\r\n    $buttonRightDiv: JQuery<HTMLDivElement>;\r\n\r\n    $markAsMergedButtonDiv: JQuery<HTMLDivElement>;\r\n    $mergedFlag: JQuery<HTMLDivElement>;\r\n\r\n    editorState: monaco.editor.IDiffEditorViewState;\r\n\r\n    $buttons: JQuery<HTMLDivElement>[] = [];\r\n\r\n    constructor(private manager: SynchronizationManager, public leftSynchroFile: SynchroFile, public rightSynchroFile: SynchroFile,\r\n        public leftSynchroWorkspace: SynchroWorkspace, public rightSynchroWorkspace: SynchroWorkspace) {\r\n\r\n        this.$leftFileDiv = makeDiv(null, \"jo_synchro_workspaceFileDiv jo_synchro_listDiv\");\r\n        this.$buttonLeftDiv = makeDiv(null, \"jo_synchro_buttonDiv jo_synchro_listDiv jo_synchro_buttonLeftDiv\");\r\n        this.$buttonRightDiv = makeDiv(null, \"jo_synchro_buttonDiv jo_synchro_listDiv jo_synchro_buttonRightDiv\");\r\n        this.$rightFileDiv = makeDiv(null, \"jo_synchro_repositoryFileDiv jo_synchro_listDiv\");\r\n        manager.$fileListDivs[0].append(this.$leftFileDiv);\r\n        manager.$fileListDivs[1].append(this.$buttonLeftDiv);\r\n        manager.$fileListDivs[2].append(this.$buttonRightDiv);\r\n        manager.$fileListDivs[3].append(this.$rightFileDiv);\r\n\r\n        if (leftSynchroFile != null && leftSynchroFile.state != \"original\") this.$leftFileDiv.addClass('jo_dirty');\r\n        if (rightSynchroFile != null && rightSynchroFile.state != \"original\") this.$rightFileDiv.addClass('jo_dirty');\r\n\r\n\r\n\r\n        let allDivs: JQuery<HTMLDivElement>[] = [this.$leftFileDiv, this.$buttonLeftDiv, this.$buttonRightDiv, this.$rightFileDiv];\r\n\r\n        let that = this;\r\n\r\n        for (let $div of allDivs) {\r\n            $div.on(\"mouseenter\", () => {\r\n                for (let $div of allDivs) $div.addClass('jo_synchro_hoverLine');\r\n            });\r\n            $div.on(\"mouseleave\", () => {\r\n                for (let $div of allDivs) $div.removeClass('jo_synchro_hoverLine').removeClass(\"jo_synchro_hoverActiveLine\");\r\n            });\r\n\r\n            $div.on(\"mousedown\", () => {\r\n                for (let $div of allDivs) $div.addClass('jo_synchro_hoverActiveLine')\r\n            });\r\n            $div.on(\"mouseup\", () => { for (let $div of allDivs) $div.removeClass('jo_synchro_hoverActiveLine') });\r\n\r\n            $div.on(\"click\", () => {\r\n                that.select();\r\n            })\r\n        }\r\n\r\n        this.createLeftFileModel();\r\n        this.createRightFileModel();\r\n\r\n    }\r\n\r\n\r\n    select() {\r\n        let allDivs: JQuery<HTMLDivElement>[] = [this.$leftFileDiv, this.$buttonLeftDiv, this.$buttonRightDiv, this.$rightFileDiv];\r\n        jQuery('#jo_synchro_fileListOuter').find('.jo_synchro_activeLine').removeClass('jo_synchro_activeLine');\r\n        for (let $div of allDivs) $div.addClass('jo_synchro_activeLine');\r\n\r\n        if (this.manager.lastShownSynchronizationElement != null) {\r\n            this.manager.lastShownSynchronizationElement.editorState = this.manager.diffEditor.saveViewState()\r\n        }\r\n\r\n        this.manager.lastShownSynchronizationElement = this;\r\n\r\n        this.setEditorModel();\r\n\r\n        if (this.editorState != null) {\r\n            this.manager.diffEditor.restoreViewState(this.editorState);\r\n        }\r\n\r\n        this.manager.diffEditor.updateOptions({\r\n            originalEditable: this.leftSynchroFile?.originalText != null\r\n        })\r\n\r\n    }\r\n\r\n    createRightFileModel() {\r\n        if (this.rightSynchroFile != null) {\r\n            this.rightSynchroFile.monacoModel = monaco.editor.createModel(this.rightSynchroFile.text, \"myJava\");\r\n        }\r\n    }\r\n\r\n    setEditorModel() {\r\n        if (this.manager.lastShownSynchronizationElement == this) {\r\n            this.manager.diffEditor.setModel({\r\n                original: this.leftSynchroFile == null ? this.getEmptyMonacoModel() : this.leftSynchroFile.monacoModel,\r\n                modified: this.rightSynchroFile == null ? this.getEmptyMonacoModel() : this.rightSynchroFile.monacoModel\r\n            });\r\n        }\r\n    }\r\n\r\n    getEmptyMonacoModel(): monaco.editor.ITextModel {\r\n        return monaco.editor.createModel(\"\", \"myJava\")\r\n    }\r\n\r\n    pending: boolean = false;\r\n    createLeftFileModel() {\r\n        if (this.leftSynchroFile != null) {\r\n            this.leftSynchroFile.monacoModel = monaco.editor.createModel(this.leftSynchroFile.text, \"myJava\");\r\n            this.leftSynchroFile.monacoModel.onDidChangeContent((event) => {\r\n\r\n                // throttle comparison to avoid editor-slowdown\r\n                if (!this.pending) {\r\n                    this.pending = true;\r\n                    setTimeout(() => {\r\n                        if (this.leftSynchroFile != null && this.leftSynchroFile?.state != \"deleted\") {\r\n\r\n                            let newText: string = this.leftSynchroFile.monacoModel.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n                            if (this.leftSynchroFile?.originalText != null &&\r\n                                newText == this.leftSynchroFile.originalText) {\r\n                                this.$leftFileDiv.removeClass(\"jo_dirty\");\r\n                                this.leftSynchroFile.state = \"original\";\r\n                            } else {\r\n                                this.$leftFileDiv.addClass(\"jo_dirty\");\r\n                                this.leftSynchroFile.state = \"changed\";\r\n                                this.leftSynchroFile.identical_to_repository_version = false;\r\n                            }\r\n                            this.manager.onContentChanged(\"left\");\r\n                            this.leftSynchroFile.text = newText;\r\n\r\n                            this.compareFilesAndAdaptGUI();\r\n                        }\r\n                        this.pending = false;\r\n                    }, 700);\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    onFileChanged(leftRight: LeftRight) {\r\n        if (leftRight == \"left\") {\r\n            this.createLeftFileModel();\r\n        } else {\r\n            this.createRightFileModel();\r\n        }\r\n        this.setEditorModel();\r\n        this.compareFilesAndAdaptGUI();\r\n        switch (leftRight) {\r\n            case \"left\":\r\n                if (this.leftSynchroFile != null && this.leftSynchroFile.state != \"original\") {\r\n                    this.$leftFileDiv.addClass(\"jo_dirty\");\r\n                } else {\r\n                    this.$leftFileDiv.removeClass(\"jo_dirty\");\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if (this.rightSynchroFile != null && this.rightSynchroFile.state != \"original\") {\r\n                    this.$rightFileDiv.addClass(\"jo_dirty\");\r\n                } else {\r\n                    this.$rightFileDiv.removeClass(\"jo_dirty\");\r\n                }\r\n                break;\r\n        }\r\n        this.manager.onContentChanged(leftRight);\r\n    }\r\n\r\n    compareFilesAndAdaptGUI() {\r\n\r\n        this.emptyGUI();\r\n        let that = this;\r\n\r\n        let leftCaption: string = \"---\";\r\n        let leftVersionCaption: string = \"\";\r\n\r\n        let needsMerge = false;\r\n\r\n        if (this.leftSynchroFile != null) {\r\n            leftCaption = this.leftSynchroFile.name;\r\n            if (this.leftSynchroFile.repository_file_version == null) {\r\n                leftVersionCaption = \"(ohne Version)\";\r\n            } else {\r\n                leftVersionCaption = \"(V \" + this.leftSynchroFile.repository_file_version;\r\n                if (!(this.leftSynchroFile.identical_to_repository_version || this.leftSynchroFile?.text == this.rightSynchroFile?.text)) {\r\n                    leftVersionCaption += '<span class=\"jo_synchro_withChanges\"> mit Änderungen</span>';\r\n                }\r\n                if (this.rightSynchroFile != null && this.leftSynchroFile.synchroWorkspace.isWritable()) {\r\n                    if (this.rightSynchroFile.repository_file_version > this.leftSynchroFile.repository_file_version) {\r\n                        needsMerge = !this.leftSynchroFile.markedAsMerged;\r\n                    }\r\n                }\r\n\r\n                leftVersionCaption += \")\";\r\n            }\r\n\r\n            if (this.leftSynchroFile.state == \"deleted\") {\r\n                leftCaption += \" - GELÖSCHT\";\r\n                leftVersionCaption = \"\";\r\n            }\r\n        }\r\n\r\n        let rightCaption = this.rightSynchroFile == null ? \"---\" : this.rightSynchroFile.name;\r\n        let rightVersionCaption = this.rightSynchroFile == null ? \"\" : \"(V \" + this.rightSynchroFile.repository_file_version + \")\";\r\n        if (this.rightSynchroFile?.state == \"deleted\") {\r\n            rightCaption += \" - GELÖSCHT\";\r\n            rightVersionCaption = \"\";\r\n        }\r\n\r\n        let $spacer1 = makeDiv(\"\", \"jo_synchro_5px_spacer\");\r\n        let $spacer2 = makeDiv(\"\", \"jo_synchro_5px_spacer\");\r\n\r\n        this.$buttonRightDiv.append($spacer2);\r\n\r\n        if (this.leftSynchroFile == null) {\r\n            if (this.leftSynchroWorkspace.isWritable() && that.rightSynchroFile.state != \"deleted\") {\r\n                this.$buttonLeftDiv.append(SynchronizationListElement.makeButton(\"create\", \"left\", () => {\r\n                    that.leftSynchroFile = {\r\n                        name: that.rightSynchroFile.name,\r\n                        idInsideRepository: that.rightSynchroFile.idInsideRepository,\r\n                        repository_file_version: that.rightSynchroFile.repository_file_version,\r\n                        identical_to_repository_version: true,\r\n                        state: \"new\",\r\n                        markedAsMerged: false,\r\n                        text: this.rightSynchroFile.text,\r\n                        synchroWorkspace: that.leftSynchroWorkspace,\r\n                        idInsideWorkspace: null,\r\n                        workspaceFile: null,\r\n                        originalText: null,\r\n                        monacoModel: null\r\n                    };\r\n                    that.leftSynchroWorkspace.files.push(that.leftSynchroFile);\r\n                    that.onFileChanged(\"left\");\r\n                }));\r\n            }\r\n            if (that.rightSynchroWorkspace.isWritable() && that.rightSynchroFile.state != \"deleted\") {\r\n                this.$buttonRightDiv.append(SynchronizationListElement.makeButton(\"delete\", \"right\", () => {\r\n                    that.rightSynchroFile.state = \"deleted\";\r\n                    that.onFileChanged(\"right\");\r\n                }));\r\n            }\r\n        } else if (this.rightSynchroFile == null) {\r\n            if (this.rightSynchroWorkspace.isWritable() && that.leftSynchroFile.state != \"deleted\") {\r\n                this.$buttonRightDiv.append(SynchronizationListElement.makeButton(\"create\", \"right\", () => {\r\n                    that.rightSynchroFile = {\r\n                        name: that.leftSynchroFile.name,\r\n                        committedFromFile: that.leftSynchroWorkspace.isWritable() ? that.leftSynchroFile : null,\r\n                        idInsideRepository: that.leftSynchroFile.idInsideRepository,\r\n                        repository_file_version: that.leftSynchroFile.repository_file_version == null ? 1 : that.leftSynchroFile.repository_file_version,\r\n                        identical_to_repository_version: that.leftSynchroFile.identical_to_repository_version,\r\n                        state: \"new\",\r\n                        markedAsMerged: false,\r\n                        text: this.leftSynchroFile.text,\r\n                        synchroWorkspace: that.rightSynchroWorkspace,\r\n                        idInsideWorkspace: null,\r\n                        workspaceFile: null,\r\n                        originalText: null,\r\n                        monacoModel: null\r\n                    }\r\n                    that.rightSynchroWorkspace.files.push(that.rightSynchroFile);\r\n                    that.leftSynchroFile.repository_file_version = that.rightSynchroFile.repository_file_version;\r\n                    that.leftSynchroFile.identical_to_repository_version = true;\r\n                    that.onFileChanged(\"right\");\r\n                }));\r\n            }\r\n            if (that.leftSynchroWorkspace.isWritable() && that.leftSynchroFile.state != \"deleted\") {\r\n                this.$buttonLeftDiv.append(SynchronizationListElement.makeButton(\"delete\", \"left\", () => {\r\n                    that.leftSynchroFile.state = \"deleted\";\r\n                    that.onFileChanged(\"left\");\r\n                }));\r\n            }\r\n        } else {\r\n            // Both SynchroFiles != null\r\n            let isSynchronized: boolean = true;\r\n\r\n            if (this.leftSynchroFile.repository_file_version == this.rightSynchroFile.repository_file_version) {\r\n                if (this.leftSynchroFile.text != this.rightSynchroFile.text) {\r\n                    isSynchronized = false;\r\n                }\r\n            } else {\r\n                isSynchronized = false;\r\n            }\r\n\r\n            if (isSynchronized) {\r\n                this.$buttonLeftDiv.append(jQuery('<div>synchron - </div>'));\r\n                this.$buttonRightDiv.append(jQuery('<div> - synchron</div>'));\r\n            } else {\r\n                if (this.leftSynchroWorkspace.isWritable()) {\r\n                    this.$buttonLeftDiv.append(SynchronizationListElement.makeButton(\"update\", \"left\", () => {\r\n                        that.leftSynchroFile.text = that.rightSynchroFile.text;\r\n                        that.leftSynchroFile.repository_file_version = that.rightSynchroFile.repository_file_version;\r\n                        that.leftSynchroFile.identical_to_repository_version = true;\r\n                        that.leftSynchroFile.state = \"changed\";\r\n                        that.onFileChanged(\"left\");\r\n                    }));\r\n                }\r\n                if (this.rightSynchroWorkspace.isWritable() && !needsMerge) {\r\n                    this.$buttonRightDiv.append(SynchronizationListElement.makeButton(\"commit\", \"right\", () => {\r\n                        that.rightSynchroFile.text = that.leftSynchroFile.text;\r\n                        that.rightSynchroFile.repository_file_version++;\r\n                        if (that.leftSynchroWorkspace.isWritable()) that.rightSynchroFile.committedFromFile = that.leftSynchroFile;\r\n                        if (that.leftSynchroWorkspace.isWritable()) {\r\n                            that.leftSynchroFile.repository_file_version = that.rightSynchroFile.repository_file_version;\r\n                            this.leftSynchroFile.identical_to_repository_version = true;\r\n                        }\r\n                        that.rightSynchroFile.state = \"changed\";\r\n                        that.onFileChanged(\"right\");\r\n                    }));\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.$buttonLeftDiv.append($spacer1);\r\n\r\n\r\n        this.$leftFileDiv.append(jQuery(`<div class=\"jo_synchro_filename\">${leftCaption}<span class=\"jo_synchro_fileVersion\">${leftVersionCaption}</span></div>`));\r\n        this.$rightFileDiv.append(jQuery(`<div class=\"jo_synchro_filename\">${rightCaption}<span class=\"jo_synchro_fileVersion\">${rightVersionCaption}</span></div>`));\r\n\r\n        if (needsMerge) {\r\n            this.$markAsMergedButtonDiv = jQuery(`<div class=\"jo_synchro_button jo_synchro_markAsMergedButton\">Als \"merged\" markieren</div>`);\r\n            this.$leftFileDiv.append(this.$markAsMergedButtonDiv);\r\n            this.$markAsMergedButtonDiv.on(\"click\", (e) => {\r\n                e.stopPropagation();\r\n                this.leftSynchroFile.markedAsMerged = true;\r\n                this.compareFilesAndAdaptGUI();\r\n            });\r\n        }\r\n\r\n        if (this.leftSynchroFile != null && this.leftSynchroFile.markedAsMerged) {\r\n            this.showMergedDiv();\r\n        }\r\n\r\n        this.manager.updateCenterButtons();\r\n\r\n    }\r\n\r\n    showMergedDiv() {\r\n        let $mergedDiv = jQuery(`<div class=\"jo_synchro_mergedDiv\">merged</div><div class=\"img_errorfree\"></div>`);\r\n        this.$leftFileDiv.append($mergedDiv);\r\n    }\r\n\r\n    emptyGUI() {\r\n        this.$leftFileDiv.empty();\r\n        this.$rightFileDiv.empty();\r\n        this.$buttonLeftDiv.empty();\r\n        this.$buttonRightDiv.empty();\r\n    }\r\n\r\n    static makeButton(kind: ButtonKind, arrowDirection: LeftRight, callback: () => void): JQuery<HTMLDivElement> {\r\n\r\n        let caption = \"\";\r\n        let klass = \"\";\r\n\r\n        switch (kind) {\r\n            case \"commit\":\r\n                caption = \"commit\"; klass = \"jo_synchro_commitButton\"; break;\r\n            case \"commitAll\":\r\n                caption = \"commit all\"; klass = \"jo_synchro_commitButton\"; break;\r\n            case \"update\":\r\n                caption = \"update\"; klass = \"jo_synchro_updateButton\"; break;\r\n            case \"updateAll\":\r\n                caption = \"update all\"; klass = \"jo_synchro_updateButton\"; break;\r\n            case \"create\": caption = \"create\"; klass = \"jo_synchro_createButton\"; break;\r\n            case \"delete\": caption = \"delete\"; klass = \"jo_synchro_deleteButton\"; break;\r\n        }\r\n\r\n        switch (arrowDirection) {\r\n            case \"left\": klass += \" jo_synchro_arrowLeft\"; break;\r\n            case \"right\": klass += \" jo_synchro_arrowRight\"; break;\r\n        }\r\n\r\n        let div: JQuery<HTMLDivElement> = jQuery(`<div class=\"jo_synchro_button ${klass}\">${caption}</div>`);\r\n\r\n        div.on(\"click\", (e) => {\r\n            e.stopPropagation();\r\n            if (callback != null) callback();\r\n        });\r\n\r\n        div.on(\"mousedown\", (e) => { e.stopPropagation() })\r\n\r\n        return div;\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { GetRepositoryRequest, GetRepositoryResponse, Repository, GainRepositoryLockRequest, GainRepositoryLockResponse, LeaseRepositoryLockRequest, LeaseRepositoryLockResponse } from \"../../communication/Data.js\";\r\nimport { EmbeddedSlider } from \"../../embedded/EmbeddedSlider.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { HistoryElement } from \"./HistoryElement.js\";\r\nimport { RepositoryTool } from \"./RepositoryTool.js\";\r\nimport { LeftRight, SynchronizationListElement } from \"./SynchronizationListElement.js\";\r\nimport { SynchroFile, SynchroWorkspace } from \"./SynchroWorkspace.js\";\r\nimport { Dialog } from \"../../main/gui/Dialog.js\";\r\n\r\n\r\ntype FileElement = {\r\n    id: number,\r\n    name: string,\r\n    leftSynchroFile: SynchroFile,\r\n    rightSynchroFile: SynchroFile\r\n}\r\n\r\nexport class SynchronizationManager {\r\n\r\n    $mainHeadingDiv: JQuery<HTMLDivElement>; // heading \"Java-Online: Synchronize repositories\"\r\n\r\n    $writeWorkspaceChangesButton: JQuery<HTMLDivElement>;\r\n    $writeRepositoryChangesButton: JQuery<HTMLDivElement>;\r\n\r\n    $backToWorkspaceButton: JQuery<HTMLDivElement>;\r\n    $backToCurrentRepositoryVersionButton: JQuery<HTMLDivElement>;\r\n\r\n    $exitButton: JQuery<HTMLDivElement>;\r\n\r\n    $belowMainHeadingDiv: JQuery<HTMLDivElement>; // contains all elements below main heading\r\n\r\n    $leftDiv: JQuery<HTMLDivElement>; // contains headings, file lists and editors\r\n    $historyOuterDiv: JQuery<HTMLDivElement>; // contains history\r\n    $historyScrollDiv: JQuery<HTMLDivElement>;\r\n\r\n    $leftUpperDiv: JQuery<HTMLDivElement>; // contains file list header, file list and file list footer\r\n\r\n    $fileListHeaderOuterDiv: JQuery<HTMLDivElement>;\r\n    $fileListHeaderDivs: JQuery<HTMLDivElement>[] = [];\r\n\r\n    $fileListHeaderContainerRight: JQuery<HTMLDivElement>;\r\n\r\n    $updateAllButton: JQuery<HTMLElement>;\r\n    $commitAllButton: JQuery<HTMLElement>;\r\n\r\n\r\n    $fileListOuterDiv: JQuery<HTMLDivElement>;\r\n    $fileListDivs: JQuery<HTMLDivElement>[] = [];\r\n\r\n    $fileListFooterDiv: JQuery<HTMLDivElement>;\r\n\r\n    $editorDiv: JQuery<HTMLDivElement>;\r\n\r\n    guiReady: boolean = false;\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    currentUserSynchroWorkspace: SynchroWorkspace;\r\n    currentRepositorySynchroWorkspace: SynchroWorkspace;\r\n    currentRepository: Repository;\r\n\r\n    leftSynchroWorkspace: SynchroWorkspace;\r\n    rightSynchroWorkspace: SynchroWorkspace;\r\n\r\n    lastShownSynchronizationElement: SynchronizationListElement;\r\n    synchronizationListElements: SynchronizationListElement[] = [];\r\n\r\n    lastShownHistoryElement: HistoryElement;\r\n    historyElements: HistoryElement[] = [];\r\n\r\n    timer: any;\r\n\r\n    repositoryIsWritable: boolean;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    synchronizeWithWorkspace(workspace: Workspace) {\r\n\r\n        this.gainRepositoryLock(workspace.repository_id, (success) => {\r\n            if (success) {\r\n                this.repositoryIsWritable = true;\r\n                this.attachToWorkspaceAndRepository(workspace);\r\n                this.show();\r\n\r\n                this.timer = setInterval(() => {\r\n\r\n                    this.gainRepositoryLock(this.currentRepository.id, (success) => {\r\n                        if (!success) {\r\n                            alert('Der Server ist temporär nicht erreichbar.');\r\n                            window.history.back();\r\n                        }\r\n                    })\r\n\r\n                }, 10000)\r\n            } else {\r\n                // User has no write permission to repository => no lock needed.\r\n                this.attachToWorkspaceAndRepository(workspace);\r\n                this.repositoryIsWritable = false;\r\n                this.show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    gainRepositoryLock(repository_id: number, callback: (success: boolean) => void) {\r\n        let request: GainRepositoryLockRequest = { repository_id: repository_id };\r\n        ajax('gainRepositoryLock', request, (response: GainRepositoryLockResponse) => {\r\n            callback(response.success);\r\n            // console.log(\"Lock for repository_id \" + repository_id + \" has been granted.\")\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(false);\r\n        });\r\n    }\r\n\r\n    attachToWorkspaceAndRepository(workspace: Workspace) {\r\n\r\n        this.currentUserSynchroWorkspace = new SynchroWorkspace(this).copyFromWorkspace(workspace);\r\n        this.leftSynchroWorkspace = this.currentUserSynchroWorkspace;\r\n\r\n        let that = this;\r\n\r\n        let request: GetRepositoryRequest = { repository_id: workspace.repository_id, workspace_id: workspace.id };\r\n        ajax(\"getRepository\", request, (response: GetRepositoryResponse) => {\r\n\r\n            that.attachToRepository(response.repository);\r\n\r\n        }, (message: string) => {\r\n            alert(message);\r\n            window.history.back();\r\n        })\r\n\r\n    }\r\n\r\n    attachToRepository(repository: Repository) {\r\n        this.currentRepository = repository;\r\n        RepositoryTool.deserializeRepository(this.currentRepository);\r\n        this.currentRepositorySynchroWorkspace = new SynchroWorkspace(this).copyFromRepository(this.currentRepository, true);\r\n\r\n        this.rightSynchroWorkspace = this.currentRepositorySynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.setupHistoryElements();\r\n    }\r\n\r\n    setupHistoryElements() {\r\n        this.$historyScrollDiv.empty();\r\n        this.historyElements = [];\r\n        this.lastShownHistoryElement = null;\r\n\r\n        this.currentRepository.historyEntries.forEach((he, index) => {\r\n            this.historyElements.push(new HistoryElement(this, this.currentRepository, he, index));\r\n        });\r\n    }\r\n\r\n    setupSynchronizationListElements() {\r\n\r\n        let lastSynchroFileLeft = null;\r\n        let lastSynchroFileRight = null;\r\n        if (this.lastShownSynchronizationElement != null) {\r\n            lastSynchroFileLeft = this.lastShownSynchronizationElement.leftSynchroFile;\r\n            lastSynchroFileRight = this.lastShownSynchronizationElement.rightSynchroFile;\r\n        }\r\n\r\n        this.$fileListDivs.forEach($div => $div.empty());\r\n\r\n        this.synchronizationListElements.forEach(se => se.emptyGUI());\r\n        this.synchronizationListElements = [];\r\n        this.lastShownSynchronizationElement = null;\r\n\r\n        let fileElements: FileElement[] = [];\r\n        let synchroFileMap: { [id: number]: FileElement } = {};\r\n\r\n        this.leftSynchroWorkspace.files.forEach(sfile => {\r\n            let fileElement = {\r\n                id: sfile.idInsideRepository,\r\n                name: sfile.name,\r\n                leftSynchroFile: sfile,\r\n                rightSynchroFile: null\r\n            };\r\n\r\n            fileElements.push(fileElement);\r\n            if (sfile.idInsideRepository != null) {\r\n                synchroFileMap[sfile.idInsideRepository] = fileElement;\r\n            }\r\n        });\r\n\r\n        this.rightSynchroWorkspace.files.forEach(sfile => {\r\n            let fileElement: FileElement = null;\r\n            if (sfile.idInsideRepository != null) fileElement = synchroFileMap[sfile.idInsideRepository];\r\n            if (fileElement == null) {\r\n                fileElement = {\r\n                    id: sfile.idInsideRepository,\r\n                    name: sfile.name,\r\n                    leftSynchroFile: null,\r\n                    rightSynchroFile: sfile\r\n                };\r\n                fileElements.push(fileElement);\r\n            } else {\r\n                fileElement.rightSynchroFile = sfile;\r\n            }\r\n        });\r\n\r\n        fileElements.sort((fe1, fe2) => fe1.name.localeCompare(fe2.name));\r\n\r\n        fileElements.forEach(fe => {\r\n\r\n            let synchroListElement = new SynchronizationListElement(this, fe.leftSynchroFile, fe.rightSynchroFile, this.leftSynchroWorkspace, this.rightSynchroWorkspace);\r\n            this.synchronizationListElements.push(synchroListElement);\r\n            synchroListElement.compareFilesAndAdaptGUI();\r\n\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: monaco.editor.createModel(\"Wählen Sie oben eine Datei aus!\", \"myJava\"),\r\n            modified: monaco.editor.createModel(\"Wählen Sie oben eine Datei aus!\", \"myJava\")\r\n        });\r\n\r\n        this.diffEditor.updateOptions({\r\n            originalEditable: false\r\n        })\r\n\r\n        if (this.leftSynchroWorkspace == this.currentUserSynchroWorkspace) {\r\n            this.setHeader(\"left\", \"Dein Workspace:\");\r\n            this.$backToWorkspaceButton.hide();\r\n        } else {\r\n            this.setHeader(\"left\", this.leftSynchroWorkspace.name + \":\");\r\n            this.$backToWorkspaceButton.show();\r\n            this.$writeWorkspaceChangesButton.hide();\r\n        }\r\n\r\n        if (this.rightSynchroWorkspace == this.currentRepositorySynchroWorkspace) {\r\n            let writable: string = this.repositoryIsWritable ? \", mit Schreibzugriff\" : \", ohne Schreibzugriff\";\r\n            this.setHeader(\"right\", \"Repository (aktuelle Version\" + writable + \"):\");\r\n            this.$backToCurrentRepositoryVersionButton.hide();\r\n        } else {\r\n            this.setHeader(\"right\", this.rightSynchroWorkspace.name + \":\");\r\n            this.$backToCurrentRepositoryVersionButton.show();\r\n            this.$writeRepositoryChangesButton.hide();\r\n        }\r\n\r\n        jQuery('#jo_synchro_main_heading_text').text(`Synchronisieren mit Repository \"${this.currentRepository.name}\"`);\r\n\r\n        let lastFileSelected: boolean = false;\r\n        if (lastSynchroFileLeft != null || lastSynchroFileRight != null) {\r\n            for (let sle of this.synchronizationListElements) {\r\n                if (\r\n                    sle.leftSynchroFile != null && sle.leftSynchroFile == lastSynchroFileLeft ||\r\n                    sle.rightSynchroFile != null && sle.rightSynchroFile == lastSynchroFileRight\r\n                ) {\r\n                    sle.select();\r\n                    lastFileSelected = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!lastFileSelected && this.synchronizationListElements.length > 0) {\r\n            this.synchronizationListElements[0].select();\r\n        }\r\n\r\n    }\r\n\r\n    show() {\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n        let $synchroDiv = jQuery('#synchronize-div');\r\n        $synchroDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n        this.$writeWorkspaceChangesButton.hide();\r\n        this.$writeRepositoryChangesButton.hide();\r\n\r\n        let that = this;\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#synchronize-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n\r\n        clearInterval(this.timer);\r\n\r\n        let request: LeaseRepositoryLockRequest = { repository_id: this.currentRepository.id };\r\n        ajax('leaseRepositoryLock', request, (response: LeaseRepositoryLockResponse) => {\r\n            // console.log(\"Lock for repository_id \" + request.repository_id + \" has been released.\")\r\n        }, (message) => {\r\n        });\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let $synchroDiv = jQuery('#synchronize-div');\r\n        let that = this;\r\n\r\n        $synchroDiv.append(\r\n\r\n            this.$mainHeadingDiv = jQuery('<div id=\"jo_synchro_main_heading\"><span id=\"jo_synchro_main_heading_text\">Java-Online: Workspace mit Repository synchronisieren</span></div>'),\r\n\r\n            this.$belowMainHeadingDiv = makeDiv(\"jo_synchro_below_main_heading\"));\r\n\r\n        let $buttonsTopRightDiv = makeDiv(\"jo_synchro_buttonsTopRight\");\r\n        this.$mainHeadingDiv.append($buttonsTopRightDiv);\r\n\r\n        $buttonsTopRightDiv.append(this.$exitButton = jQuery('<div id=\"jo_synchro_exitButton\" class=\"jo_synchro_button\">Zurück zum Programmieren</div>'));\r\n\r\n        this.$exitButton.on('click', () => {\r\n            window.history.back();\r\n        });\r\n\r\n        this.$leftDiv = makeDiv(\"jo_synchro_leftDiv\");\r\n        this.$historyOuterDiv = makeDiv(\"jo_synchro_historyOuterDiv\");\r\n\r\n        this.$historyOuterDiv.append(jQuery('<div id=\"jo_synchro_historyHeader\"><div class=\"jo_synchro_tabHeading\">History:</div></div>)'));\r\n\r\n        this.$belowMainHeadingDiv.append(this.$leftDiv, this.$historyOuterDiv);\r\n\r\n        new EmbeddedSlider(this.$historyOuterDiv, true, false, () => { this.diffEditor.layout(); }).$sliderDiv.css('left', '-3px');\r\n        this.$historyOuterDiv.find('.joe_slider').css('position', 'absolute');\r\n\r\n        this.$historyScrollDiv = makeDiv(\"historyScrollDiv\", \"jo_srollable\");\r\n        this.$historyOuterDiv.append(this.$historyScrollDiv);\r\n\r\n\r\n        this.$leftDiv.append(\r\n            this.$leftUpperDiv = makeDiv(\"jo_synchro_leftUpper\"),\r\n            this.$editorDiv = makeDiv(\"jo_synchro_editor\")\r\n        );\r\n\r\n        this.$leftUpperDiv.append(\r\n            this.$fileListHeaderOuterDiv = makeDiv(\"jo_synchro_fileListHeaderOuter\"),\r\n            this.$fileListOuterDiv = makeDiv(\"jo_synchro_fileListOuter\", \"jo_scrollable\"),\r\n            this.$fileListFooterDiv = makeDiv(\"jo_synchro_fileListFooter\")\r\n        )\r\n\r\n        this.$fileListHeaderContainerRight = makeDiv(null, \"jo_synchro_fileListHeaderContainerRight\");\r\n        let fileListHeaderRight = makeDiv(null, \"jo_synchro_fileListHeader\");\r\n        this.$fileListHeaderContainerRight.append(fileListHeaderRight);\r\n\r\n        let $fileListHeaderCenter = makeDiv(null, \"jo_synchro_fileListHeaderCenter\");\r\n        $fileListHeaderCenter.append(this.$updateAllButton = SynchronizationListElement.makeButton(\"updateAll\", \"left\", () => { that.updateAll() }));\r\n        $fileListHeaderCenter.append(this.$commitAllButton = SynchronizationListElement.makeButton(\"commitAll\", \"right\", () => { that.commitAll() }));\r\n\r\n        this.$fileListHeaderDivs.push(makeDiv(null, \"jo_synchro_fileListHeader\", \"\", { \"flex\": \"2 0\" }), $fileListHeaderCenter, this.$fileListHeaderContainerRight, makeDiv(null, \"jo_synchro_scrollbarPlaceholder\"));\r\n        this.$fileListDivs.push(makeDiv(null, \"jo_synchro_fileList\"), makeDiv(null, \"jo_synchro_fileListButtonsLeft\"), makeDiv(null, \"jo_synchro_fileListButtonsRight\"), makeDiv(null, \"jo_synchro_fileList\"));\r\n\r\n        this.$fileListHeaderOuterDiv.append(this.$fileListHeaderDivs);\r\n        this.$fileListOuterDiv.append(this.$fileListDivs);\r\n\r\n        this.$fileListHeaderDivs[0].append(\"<div class='jo_synchro_tabHeading'>Dein Workspace:</div>\");\r\n        fileListHeaderRight.append(\"<div class='jo_synchro_tabHeading'>Repository (aktuelle Version):</div>\");\r\n\r\n\r\n        this.$fileListHeaderDivs[0].append(this.$backToWorkspaceButton = jQuery('<div class=\"jo_synchro_button jo_synchro_backToButton\">Zeige eigenen Workspace</div>'));\r\n        this.$backToWorkspaceButton.on('click', () => {\r\n            that.backToWorkspace();\r\n        });\r\n        this.$backToWorkspaceButton.hide();\r\n\r\n\r\n\r\n\r\n        fileListHeaderRight.append(this.$backToCurrentRepositoryVersionButton = jQuery('<div class=\"jo_synchro_button jo_synchro_backToButton\">Zeige aktuelle Repository-Version</div>'));\r\n        this.$backToCurrentRepositoryVersionButton.on('click', () => {\r\n            that.backToCurrentRepositoryVersion();\r\n        });\r\n        this.$backToWorkspaceButton.hide();\r\n\r\n        this.$fileListHeaderDivs[0].append(this.$writeWorkspaceChangesButton = jQuery('<div id=\"jo_synchro_writeChangesButton\" class=\"jo_synchro_button\">Änderungen am Workspace (rot!) speichern</div>'));\r\n        this.$writeWorkspaceChangesButton.on('click', () => {\r\n            that.writeWorkspaceChanges();\r\n        });\r\n        this.$writeWorkspaceChangesButton.hide();\r\n\r\n        fileListHeaderRight.append(this.$writeRepositoryChangesButton = jQuery('<div id=\"jo_synchro_writeChangesButton\" class=\"jo_synchro_button\">Änderungen am Repository (rot!) speichern</div>'));\r\n        this.$writeRepositoryChangesButton.on('click', () => {\r\n            that.writeRepositoryChanges();\r\n        });\r\n        this.$writeRepositoryChangesButton.hide();\r\n\r\n\r\n\r\n\r\n        let horizontalSlider = new EmbeddedSlider(this.$editorDiv, true, true, () => { this.diffEditor.layout(); });\r\n        horizontalSlider.setColor('var(--slider)');\r\n\r\n        this.makeDroppable(\"left\", this.$fileListDivs[0]);\r\n        this.makeDroppable(\"right\", this.$fileListDivs[3]);\r\n\r\n        this.initEditor();\r\n    }\r\n\r\n    backToWorkspace() {\r\n        this.leftSynchroWorkspace = this.currentUserSynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.onContentChanged(\"left\");\r\n    }\r\n\r\n    backToCurrentRepositoryVersion() {\r\n        this.rightSynchroWorkspace = this.currentRepositorySynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.onContentChanged(\"right\");\r\n    }\r\n\r\n    makeDroppable(leftRight: LeftRight, $dropZoneDiv: JQuery<HTMLDivElement>) {\r\n        let that = this;\r\n        $dropZoneDiv.on(\"dragover\", (e) => {\r\n            $dropZoneDiv.addClass('jo_synchro_dragZone');\r\n            e.preventDefault();\r\n        });\r\n        $dropZoneDiv.on(\"dragleave\", () => {\r\n            $dropZoneDiv.removeClass('jo_synchro_dragZone');\r\n        });\r\n        $dropZoneDiv.on(\"drop\", (e) => {\r\n            let sw = new SynchroWorkspace(that).copyFromHistoryElement(HistoryElement.currentlyDragged);\r\n            switch (leftRight) {\r\n                case \"left\":\r\n                    that.leftSynchroWorkspace = sw;\r\n                    break;\r\n                case \"right\":\r\n                    that.rightSynchroWorkspace = sw;\r\n                    break;\r\n            }\r\n            that.setupSynchronizationListElements();\r\n            $dropZoneDiv.removeClass('jo_synchro_dragZone');\r\n        })\r\n\r\n    }\r\n\r\n    setHeader(leftRight: LeftRight, caption: string) {\r\n        let index: number = leftRight == \"left\" ? 0 : 2;\r\n        this.$fileListHeaderDivs[index].find('.jo_synchro_tabHeading').text(caption);\r\n    }\r\n\r\n    writeRepositoryChanges() {\r\n\r\n        let that = this;\r\n        this.$writeRepositoryChangesButton.hide();\r\n\r\n        let $dialogDiv = makeDiv(\"\", \"jo_synchro_commitDialogDiv\");\r\n        $dialogDiv.hide();\r\n        this.$fileListHeaderContainerRight.append($dialogDiv);\r\n\r\n        $dialogDiv.append(makeDiv(\"\", \"jo_synchro_commitDialogCaption\", \"Bitte beschreibe kurz die vorgenommenen Änderungen am Repository:\"));\r\n        let $dialogTextarea: JQuery<HTMLTextAreaElement> = jQuery('<textarea class=\"jo_synchro_commitDialogTextarea\"></textarea>');\r\n        $dialogDiv.append($dialogTextarea);\r\n\r\n        let $dialogButtonDiv = makeDiv(\"\", \"jo_synchro_commitDialogButtonDiv\");\r\n        $dialogDiv.append($dialogButtonDiv);\r\n\r\n        let $buttonCancel = makeDiv(\"\", \"jo_synchro_button\", \"Abbrechen\", { \"background-color\": \"var(--updateButtonBackground)\", \"color\": \"var(--updateButtonColor)\" })\r\n        $dialogButtonDiv.append($buttonCancel);\r\n\r\n        $buttonCancel.on(\"click\", () => {\r\n            $dialogDiv.remove();\r\n            that.$writeRepositoryChangesButton.show();\r\n        })\r\n\r\n        let $buttonOK = makeDiv(\"\", \"jo_synchro_button\", \"OK\", { \"background-color\": \"var(--createButtonBackground)\", \"color\": \"var(--createButtonColor)\" })\r\n        $dialogButtonDiv.append($buttonOK);\r\n\r\n        $dialogDiv.show(600);\r\n\r\n        $buttonOK.on(\"click\", () => {\r\n            let comment = <string>$dialogTextarea.val();\r\n            $dialogDiv.remove();\r\n\r\n            this.currentRepositorySynchroWorkspace.commit(this.currentUserSynchroWorkspace.copiedFromWorkspace, this.currentRepository, comment,\r\n                this.main, (repository: Repository, errorMessage: string) => {\r\n\r\n                    if (errorMessage != null) {\r\n                        alert(errorMessage);\r\n                        this.attachToWorkspaceAndRepository(this.currentRepositorySynchroWorkspace.copiedFromWorkspace);\r\n                    } else {\r\n                        this.attachToRepository(repository);\r\n                        this.$writeRepositoryChangesButton.hide();\r\n                    }\r\n\r\n                });\r\n\r\n        })\r\n\r\n        $dialogTextarea.focus();\r\n\r\n    }\r\n\r\n    writeWorkspaceChanges() {\r\n        this.currentUserSynchroWorkspace.writeChangesToWorkspace();\r\n        this.currentUserSynchroWorkspace = new SynchroWorkspace(this).copyFromWorkspace(this.currentUserSynchroWorkspace.copiedFromWorkspace);\r\n        this.leftSynchroWorkspace = this.currentUserSynchroWorkspace;\r\n        this.setupSynchronizationListElements();\r\n        this.$writeWorkspaceChangesButton.hide();\r\n    }\r\n\r\n    initEditor() {\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"jo_synchro_editor\"), {\r\n            originalEditable: true, // for left pane\r\n            readOnly: true,         // for right pane\r\n            automaticLayout: true\r\n        });\r\n    }\r\n\r\n    onContentChanged(leftRight: LeftRight) {\r\n        let $button: JQuery<HTMLDivElement> = leftRight == \"left\" ? this.$writeWorkspaceChangesButton : this.$writeRepositoryChangesButton\r\n        let synchroWorkspace: SynchroWorkspace = leftRight == \"left\" ? this.currentUserSynchroWorkspace : this.currentRepositorySynchroWorkspace;\r\n\r\n        if (synchroWorkspace.hasChanges()) {\r\n            $button.show();\r\n        } else {\r\n            $button.hide();\r\n        }\r\n\r\n    }\r\n\r\n    updateAll() {\r\n        let updateButtons = this.$fileListDivs[1].find('.jo_synchro_updateButton');\r\n        updateButtons.click();\r\n    }\r\n\r\n    commitAll() {\r\n        let commitButtons = this.$fileListDivs[2].find('.jo_synchro_commitButton');\r\n        commitButtons.click();\r\n    }\r\n\r\n\r\n    updateCenterButtons() {\r\n        let updateButtons = this.$fileListDivs[1].find('.jo_synchro_updateButton');\r\n        if (updateButtons.length > 0) {\r\n            this.$updateAllButton.css(\"visibility\", \"inherit\");\r\n        } else {\r\n            this.$updateAllButton.css(\"visibility\", \"hidden\");\r\n        }\r\n\r\n        let commitButtons = this.$fileListDivs[2].find('.jo_synchro_commitButton');\r\n        if (commitButtons.length > 0) {\r\n            this.$commitAllButton.css(\"visibility\", \"inherit\");\r\n        } else {\r\n            this.$commitAllButton.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { makeDiv, SelectItem, getSelectedObject, setSelectItems } from \"../../tools/HtmlTools.js\";\r\nimport { RepositoryUser, GetRepositoryRequest, GetRepositoryResponse, GetRepositoryUserListRequest, GetRepositoryUserListResponse, UserData } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\n\r\n\r\n\r\nexport class RepositoryCreateManager {\r\n\r\n    guiReady: boolean = false;\r\n\r\n    $mainHeading: JQuery<HTMLDivElement>;\r\n    $settingsDiv: JQuery<HTMLElement>;\r\n\r\n    $repoName: JQuery<HTMLInputElement>;\r\n    $repoDescription: JQuery<HTMLTextAreaElement>;\r\n    $repoPublishedTo: JQuery<HTMLSelectElement>;\r\n\r\n    $cancelButton: JQuery<HTMLElement>;\r\n    $createButton: JQuery<HTMLElement>;\r\n\r\n\r\n    publishedToItems: SelectItem[] = [];\r\n\r\n    workspace: Workspace;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let that = this;\r\n        let $updateDiv = jQuery('#createRepo-div');\r\n\r\n        $updateDiv.append(this.$mainHeading = makeDiv('', \"createUpdateRepo-mainHeading\"));\r\n\r\n        $updateDiv.append(this.$settingsDiv = makeDiv('', \"createUpdateRepo-settingsDiv\"));\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Name des Repositorys:</div>'));\r\n        this.$settingsDiv.append(this.$repoName = jQuery('<input type=\"text\" class=\"createUpdateRepo-inputcolumn\"></input>'));\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Beschreibung:</div>'));\r\n        this.$settingsDiv.append(this.$repoDescription = jQuery('<textarea class=\"createUpdateRepo-inputcolumn\" style=\"min-height: 4em\"></textarea>'));\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Veröffentlicht für:</div>'));\r\n        this.$settingsDiv.append(this.$repoPublishedTo = jQuery('<select class=\"createUpdateRepo-inputcolumn\"></select>'));\r\n\r\n        let $buttonDiv = makeDiv(\"createRepo-buttonDiv\");\r\n\r\n        $buttonDiv.append(this.$createButton = makeDiv(\"\", \"jo_synchro_button\", \"Repository erstellen\", { \"background-color\": \"var(--createButtonBackground)\", \"color\": \"var(--createButtonColor)\" }));\r\n        this.$createButton.on(\"click\", () => { that.createButtonClicked() })\r\n\r\n        $buttonDiv.append(this.$cancelButton = makeDiv(\"\", \"jo_synchro_button\", \"Abbrechen\", { \"background-color\": \"var(--cancelButtonBackground)\", \"color\": \"var(--cancelButtonColor)\" }));\r\n        this.$cancelButton.on(\"click\", () => { that.cancelButtonClicked() })\r\n\r\n        $updateDiv.append($buttonDiv);\r\n\r\n\r\n    }\r\n\r\n    show(workspace: Workspace) {\r\n\r\n        this.workspace = workspace;\r\n\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n\r\n        let user = this.main.user;\r\n        let isStudent = !(user.is_admin || user.is_schooladmin || user.is_teacher);\r\n\r\n        this.publishedToItems =\r\n            [\r\n                { value: \"0\", object: 0, caption: \"Keine Veröffentlichung (privates Repository)\" },\r\n                { value: \"1\", object: 1, caption: isStudent ? \"Veröffentlicht für alle Schüler/innen der Klasse\" : \"Veröffentlicht für alle Schüler/innen der unterrichteten Klassen\" },\r\n                { value: \"2\", object: 2, caption: \"Veröffentlicht für alle Schüler/innen der Schule\" },\r\n            ];\r\n        setSelectItems(this.$repoPublishedTo, this.publishedToItems, \"0\");\r\n\r\n\r\n        let $synchroDiv = jQuery('#createRepo-div');\r\n        $synchroDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n\r\n        this.initCreateMode(workspace);\r\n\r\n        let that = this;\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n\r\n    }\r\n\r\n    initCreateMode(workspace: Workspace) {\r\n        let user = this.main.user;\r\n\r\n        let userInfo: RepositoryUser = {\r\n            firstName: user.rufname,\r\n            lastName: user.familienname,\r\n            username: user.username,\r\n            user_id: user.id,\r\n            canWrite: true,\r\n            klasse: \"\"\r\n        }\r\n\r\n        this.$mainHeading.text(`Repository anlegen und mit Workspace \"${workspace.name}\" verknüpfen:`);\r\n        this.$createButton.show();\r\n        this.$repoName.val(workspace.name);\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#createRepo-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n    }\r\n\r\n    createButtonClicked() {\r\n\r\n        let publishedTo: number = getSelectedObject(this.$repoPublishedTo);\r\n        let repoName: string = <string>this.$repoName.val();\r\n        let repoDescription: string = <string>this.$repoDescription.val();\r\n\r\n        this.main.networkManager.sendCreateRepository(this.workspace, publishedTo, repoName, repoDescription, (error: string, repository_id?: number) => {\r\n            if (error == null) {\r\n                let projectExplorer = this.main.projectExplorer;\r\n                let element = projectExplorer.workspaceListPanel.findElement(this.workspace);\r\n                projectExplorer.workspaceListPanel.setElementClass(element, \"repository\");\r\n                this.workspace.renderSynchronizeButton(element);\r\n                projectExplorer.showRepositoryButtonIfNeeded(this.workspace);\r\n                window.history.back(); // close modal window\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    cancelButtonClicked() {\r\n        window.history.back(); // close modal window\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { makeDiv, SelectItem, setSelectItems, getSelectedObject, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { RepositoryUser, GetRepositoryRequest, GetRepositoryResponse, GetRepositoryUserListRequest, GetRepositoryUserListResponse, UserData, GetRepositoryListRequest, GetRepositoryListResponse, RepositoryInfo, UpdateRepositoryRequest, UpdateRepositoryResponse, RepositoryUserWriteAccessData, UpdateRepositoryUserWriteAccessRequest, UpdateRepositoryUserWriteAccessResponse, DeleteRepositoryRequest } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\n\r\nexport class RepositorySettingsManager {\r\n\r\n    guiReady: boolean = false;\r\n\r\n    $mainHeading: JQuery<HTMLDivElement>;\r\n\r\n    $settingsDiv: JQuery<HTMLElement>;\r\n    $repoName: JQuery<HTMLInputElement>;\r\n    $repoDescription: JQuery<HTMLTextAreaElement>;\r\n    $repoPublishedTo: JQuery<HTMLSelectElement>;\r\n    $repoOwner: JQuery<HTMLSelectElement>;\r\n\r\n    $repoListDiv: JQuery<HTMLElement>;\r\n\r\n    $userlistDiv: JQuery<HTMLElement>;\r\n\r\n    $exitButton: JQuery<HTMLElement>;\r\n    $saveButton: JQuery<HTMLElement>;\r\n    $deleteButton: JQuery<HTMLElement>;\r\n\r\n    publishedToItems: SelectItem[] = [];\r\n\r\n    repositoryOwnerItems: SelectItem[] = [];\r\n\r\n    users: RepositoryUser[] = [];\r\n\r\n    workspace: Workspace;\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let that = this;\r\n        let $updateDiv = jQuery('#updateRepo-div');\r\n\r\n        $updateDiv.append(this.$mainHeading = makeDiv('updateRepo-mainHeading', \"createUpdateRepo-mainHeading\", \"\"));\r\n        this.$mainHeading.append(makeDiv(\"\", \"\", \"Repositories verwalten\"));\r\n        this.$mainHeading.append(this.$exitButton = makeDiv(\"\", \"jo_synchro_button\", \"Zurück zum Programmieren\", { \"background-color\": \"var(--speedcontrol-grip)\", \"color\": \"var(--fontColorLight)\", \"font-size\": \"10pt\" }));\r\n        this.$exitButton.on(\"click\", () => { that.exitButtonClicked() })\r\n\r\n\r\n        let $divBelow = makeDiv(\"updateRepo-divBelow\");\r\n        $updateDiv.append($divBelow);\r\n\r\n        let $divLeft = makeDiv(\"updateRepo-divLeft\");\r\n        $divBelow.append($divLeft);\r\n\r\n        $divLeft.append(makeDiv('', 'updateRepo-minorHeading', 'Repositories:'));\r\n\r\n        this.$repoListDiv = makeDiv(\"updateRepo-repoListDiv\");\r\n        $divLeft.append(this.$repoListDiv);\r\n\r\n        let $rightDiv = makeDiv(\"updateRepo-divRight\");\r\n        $divBelow.append($rightDiv);\r\n\r\n        this.$settingsDiv = makeDiv(\"\", \"createUpdateRepo-settingsDiv\");\r\n        $rightDiv.append(this.$settingsDiv);\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Name des Repositorys:</div>'));\r\n        this.$settingsDiv.append(this.$repoName = jQuery('<input type=\"text\" class=\"createUpdateRepo-inputcolumn\"></input>'));\r\n        this.$repoName.on(\"input\", () => { that.enableSaveButton() });\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Beschreibung:</div>'));\r\n        this.$settingsDiv.append(this.$repoDescription = jQuery('<textarea class=\"createUpdateRepo-inputcolumn\" style=\"min-height: 4em\"></textarea>'));\r\n        this.$repoDescription.on(\"input\", () => { that.enableSaveButton() });\r\n\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Veröffentlicht für:</div>'));\r\n        this.$settingsDiv.append(this.$repoPublishedTo = jQuery('<select class=\"createUpdateRepo-inputcolumn\"></select>'));\r\n        this.$repoPublishedTo.on(\"change\", () => { that.enableSaveButton() });\r\n\r\n        this.$settingsDiv.append(jQuery('<div class=\"createUpdateRepo-settingsLabel\">Eigentümer:</div>'));\r\n        this.$settingsDiv.append(this.$repoOwner = jQuery('<select class=\"createUpdateRepo-inputcolumn\"></select>'));\r\n        this.$repoOwner.on(\"change\", () => { that.enableSaveButton() });\r\n\r\n        $rightDiv.append(this.$userlistDiv = makeDiv(\"updateRepo-userlistDiv\"));\r\n\r\n        this.$userlistDiv.append(makeDiv(null, \"updateRepo-userlistheading\", \"Benutzer, die das Repository nutzen\", { \"grid-column\": 1 }))\r\n        this.$userlistDiv.append(makeDiv(null, \"updateRepo-userlistheading\", \"Schreibberechtigung\", { \"grid-column\": 2 }))\r\n\r\n        let $buttonDiv = makeDiv(\"updateRepo-buttonDiv\");\r\n\r\n        $buttonDiv.append(this.$saveButton = makeDiv(\"\", \"jo_synchro_button\", \"Änderungen speichern\", { \"background-color\": \"var(--updateButtonBackground)\", \"color\": \"var(--updateButtonColor)\" }));\r\n        this.$saveButton.on(\"click\", () => { that.saveButtonClicked() })\r\n        this.$saveButton.hide();\r\n\r\n        $rightDiv.append($buttonDiv);\r\n\r\n    }\r\n\r\n    enableSaveButton() {\r\n        this.$saveButton.show();\r\n    }\r\n\r\n    show(repository_id: number) {\r\n\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n\r\n        let $synchroDiv = jQuery('#updateRepo-div');\r\n        $synchroDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n        let user = this.main.user;\r\n        let is_student = !(user.is_teacher || user.is_admin || user.is_schooladmin);\r\n\r\n        this.publishedToItems = [\r\n            { value: 0, object: 0, caption: \"Keine Veröffentlichung (privates Repository)\" },\r\n            { value: 1, object: 1, caption: is_student ? \"Veröffentlicht für alle Schüler/innen der Klasse\" : \"Veröffentlicht für alle Schüler/innen der unterrichteten Klassen\" },\r\n            { value: 2, object: 2, caption: \"Veröffentlicht für alle Schüler/innen der Schule\" },\r\n        ];\r\n\r\n        setSelectItems(this.$repoPublishedTo, this.publishedToItems, 0);\r\n\r\n        this.$saveButton.show();\r\n\r\n        this.showRepositoryList();\r\n\r\n        let that = this;\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n\r\n    }\r\n\r\n    deleteRepository(repInfo: RepositoryInfo) {\r\n\r\n        let that = this;\r\n        let request: DeleteRepositoryRequest = { repository_id: repInfo.id };\r\n        ajax('deleteRepository', request, () => {\r\n            that.showRepositoryList();\r\n        });\r\n\r\n    }\r\n\r\n    showRepositoryList() {\r\n        this.emptyRepositoryInfo();\r\n        let grlq: GetRepositoryListRequest = {\r\n            onlyOwnRepositories: true\r\n        }\r\n\r\n        this.$repoListDiv.empty();\r\n        let that = this;\r\n        ajax('getRepositoryList', grlq, (response: GetRepositoryListResponse) => {\r\n\r\n            let $firstDiv: JQuery<HTMLDivElement>;\r\n            let firstRepInfo: RepositoryInfo;\r\n\r\n            response.repositories.forEach(repInfo => {\r\n                let $div = makeDiv('', 'updateRepo-repoListItem');\r\n                let $namediv = makeDiv('', '', repInfo.name);\r\n                let $deleteDiv = jQuery('<div class=\"img_delete jo_button jo_active\" title=\"Repository löschen...\"></div>');\r\n                $div.append($namediv, $deleteDiv);\r\n                this.$repoListDiv.append($div);\r\n                $div.on('click', (e) => {\r\n                    that.selectRepository($div, repInfo);\r\n                })\r\n                $div.data('repoInfo', repInfo);\r\n                if (firstRepInfo == null) {\r\n                    firstRepInfo = repInfo;\r\n                    $firstDiv = $div;\r\n                }\r\n\r\n                $deleteDiv.on(\"click\", (ev) => {\r\n                    ev.preventDefault();\r\n                    openContextMenu([{\r\n                        caption: \"Abbrechen\",\r\n                        callback: () => { }\r\n                    }, {\r\n                        caption: \"Ich bin mir sicher: löschen!\",\r\n                        color: \"#ff6060\",\r\n                        callback: () => {\r\n                            that.deleteRepository(repInfo);\r\n                        }\r\n                    }], ev.pageX + 2, ev.pageY + 2);\r\n                    ev.stopPropagation();\r\n                });\r\n            });\r\n\r\n            if ($firstDiv != null) {\r\n                this.selectRepository($firstDiv, firstRepInfo);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    selectRepository($repoDiv: JQuery<HTMLDivElement>, repInfo: RepositoryInfo) {\r\n        this.emptyRepositoryInfo();\r\n        if (this.$saveButton.is(\":visible\")) {\r\n            let selectedItem = this.$repoListDiv.find('.active').first();\r\n            let repoData: RepositoryInfo = <any>selectedItem.data('repoInfo');\r\n            if (repoData) {\r\n                alert(`Deine Änderungen am Repository \"${repoData.name}\" wurden nicht gespeichert.`);\r\n            }\r\n        }\r\n\r\n        this.$saveButton.hide();\r\n        this.$repoListDiv.find('.updateRepo-repoListItem').removeClass('active');\r\n        $repoDiv.addClass('active');\r\n        this.$repoName.val(repInfo.name);\r\n        this.$repoDescription.val(repInfo.description);\r\n        this.$repoPublishedTo.val(repInfo.published_to);\r\n\r\n        this.$repoOwner.empty();\r\n        this.$userlistDiv.children().not('.updateRepo-userlistheading').remove();\r\n\r\n        let req: GetRepositoryUserListRequest = { repository_id: repInfo.id };\r\n        let that = this;\r\n\r\n        ajax('getRepositoryUserList', req, (response: GetRepositoryUserListResponse) => {\r\n\r\n            response.repositoryUserList.forEach(userData => {\r\n\r\n                let $userDiv = makeDiv(\"\", \"updateRepo-userDiv\", `${userData.firstName} ${userData.lastName} (${userData.username})`, { 'grid-column': 1 });\r\n\r\n                let $canWriteDiv = makeDiv(\"\", \"canWriteDiv\", \"\", { 'grid-column': 2 });\r\n                let $canWriteCheckBox = jQuery('<input type=\"checkbox\">');\r\n                $canWriteDiv.append($canWriteCheckBox);\r\n\r\n                //@ts-ignore\r\n                $canWriteCheckBox.attr('checked', userData.canWrite);\r\n                $canWriteCheckBox.data('user', userData);\r\n                $canWriteCheckBox.on(\"change\", () => { that.enableSaveButton() });\r\n\r\n                that.$userlistDiv.append($userDiv, $canWriteDiv);\r\n            });\r\n\r\n            that.$repoOwner.empty();\r\n            setSelectItems(that.$repoOwner, response.repositoryUserList.map(userData => {\r\n                let se: SelectItem = {\r\n                    caption: `${userData.firstName} ${userData.lastName} (${userData.username})`,\r\n                    object: userData,\r\n                    value: userData.user_id + \"\"\r\n                }\r\n                return se;\r\n            }), repInfo.owner_id + \"\")\r\n\r\n        });\r\n\r\n    }\r\n\r\n    emptyRepositoryInfo() {\r\n        this.$repoOwner.empty();\r\n        this.$repoName.val('');\r\n        this.$repoDescription.val('');\r\n        this.$userlistDiv.find('.updateRepo-userDiv').remove();\r\n        this.$userlistDiv.find('.canWriteDiv').remove();\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#updateRepo-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n    }\r\n\r\n    saveButtonClicked() {\r\n\r\n        let that = this;\r\n\r\n        let selectedItem = this.$repoListDiv.find('.active').first();\r\n        let repoData: RepositoryInfo = <any>selectedItem.data('repoInfo');\r\n\r\n        let name: string = <string>this.$repoName.val();\r\n        let owner: RepositoryUser = getSelectedObject(this.$repoOwner);\r\n        let published_to: number = getSelectedObject(this.$repoPublishedTo);\r\n\r\n        let updateRepositoryRequest: UpdateRepositoryRequest = {\r\n            owner_id: owner.user_id,\r\n            description: <string>this.$repoDescription.val(),\r\n            published_to: published_to,\r\n            repository_id: repoData.id,\r\n            name: name\r\n        };\r\n\r\n\r\n        // update user write access:\r\n\r\n        let writeAccessList: RepositoryUserWriteAccessData[] = [];\r\n\r\n        that.$userlistDiv.find('input').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            let user: RepositoryUser = <any>$element.data('user');\r\n            writeAccessList.push({\r\n                has_write_access: <any>jQuery(element).is(':checked'),\r\n                user_id: user.user_id\r\n            });\r\n        });\r\n\r\n        let request: UpdateRepositoryUserWriteAccessRequest = {\r\n            repository_id: repoData.id,\r\n            writeAccessList: writeAccessList\r\n        }\r\n\r\n        if (repoData.owner_id == owner.user_id || \r\n              confirm(\"Soll die Eigentümerschaft über das Repository \" + repoData.name + \" wirklich an \" + owner.firstName + \" \" + owner.lastName + \" übertragen werden?\")) {\r\n            ajax('updateRepositoryUserWriteAccess', request, (response: UpdateRepositoryUserWriteAccessResponse) => {\r\n\r\n\r\n                ajax(\"updateRepository\", updateRepositoryRequest, (response: UpdateRepositoryResponse) => {\r\n\r\n                    repoData.name = name;\r\n                    repoData.owner_id = owner.user_id;\r\n                    repoData.owner_name = owner.firstName + \" \" + owner.lastName;\r\n                    repoData.owner_username = owner.username;\r\n                    repoData.published_to = published_to;\r\n                    repoData.description = updateRepositoryRequest.description;\r\n\r\n                    alert('Die Änderungen wurden erfolgreich gespeichert.')\r\n                    that.$saveButton.hide();\r\n                    that.showRepositoryList();\r\n\r\n\r\n                }, (errorMessage: string) => {\r\n                    alert(\"Fehler: \" + errorMessage);\r\n                    that.exitButtonClicked();\r\n                });\r\n\r\n            }, (errorMessage: string) => {\r\n                alert(\"Fehler: \" + errorMessage);\r\n                that.exitButtonClicked();\r\n            }\r\n            );\r\n        } else {\r\n            alert(\"Der Speichervorgang wurde nicht durchgeführt.\");\r\n        }\r\n    }\r\n\r\n\r\n    exitButtonClicked() {\r\n        window.history.back();\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { makeDiv, SelectItem, setSelectItems, getSelectedObject } from \"../../tools/HtmlTools.js\";\r\nimport { RepositoryUser, GetRepositoryRequest, GetRepositoryResponse, GetRepositoryUserListRequest, GetRepositoryUserListResponse, UserData, GetRepositoryListRequest, GetRepositoryListResponse, RepositoryInfo, UpdateRepositoryRequest, UpdateRepositoryResponse, AttachWorkspaceToRepositoryRequest, WorkspaceData, AttachWorkspaceToRepositoryResponse } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { TeachersWithClassesMI } from \"../../administration/TeachersWithClasses.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { ProjectExplorer } from \"../../main/gui/ProjectExplorer.js\";\r\n\r\n\r\nexport class RepositoryCheckoutManager {\r\n\r\n    guiReady: boolean = false;\r\n\r\n    $mainHeading: JQuery<HTMLDivElement>;\r\n\r\n    $repoListDiv: JQuery<HTMLElement>;\r\n\r\n    $exitButton: JQuery<HTMLElement>;\r\n    $checkoutButton: JQuery<HTMLElement>;\r\n\r\n    $workspaceDropdown: JQuery<HTMLSelectElement>;\r\n    $filterButtonDiv: JQuery<HTMLElement>;\r\n    $filterInput: JQuery<HTMLInputElement>;\r\n\r\n    filterbuttonOptions = [\"alle\", \"private\", \"für die Klasse freigegebene\", \"für die Schule freigegebene\"];\r\n\r\n    workspace: Workspace;\r\n\r\n    repositories: RepositoryInfo[] = [];\r\n\r\n    constructor(public main: Main) {\r\n    }\r\n\r\n    initGUI() {\r\n        this.guiReady = true;\r\n        let that = this;\r\n        let $checkoutDiv = jQuery('#checkoutRepo-div');\r\n\r\n        $checkoutDiv.append(this.$mainHeading = makeDiv('checkoutRepo-mainHeading', \"createUpdateRepo-mainHeading\", \"\"));\r\n        this.$mainHeading.append(makeDiv(\"\", \"\", \"Checkout Repository - Workspace mit Repository verbinden\"));\r\n        this.$mainHeading.append(this.$exitButton = makeDiv(\"\", \"jo_synchro_button\", \"Zurück zum Programmieren\", { \"background-color\": \"var(--speedcontrol-grip)\", \"color\": \"var(--fontColorLight)\", \"font-size\": \"10pt\" }));\r\n        this.$exitButton.on(\"click\", () => { that.exitButtonClicked() })\r\n\r\n\r\n        let $divBelow = makeDiv(\"checkoutRepo-divBelow\");\r\n        $checkoutDiv.append($divBelow);\r\n\r\n        let $chooseWorkspaceDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($chooseWorkspaceDiv);\r\n        $chooseWorkspaceDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Diesen Worspace mit dem Repository verbinden:\"));\r\n        this.$workspaceDropdown = jQuery('<select></select>');\r\n        $chooseWorkspaceDiv.append(this.$workspaceDropdown);\r\n\r\n        let $publishedToFilterDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($publishedToFilterDiv);\r\n        $publishedToFilterDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Diese Repositories anzeigen:\"));\r\n        this.$filterButtonDiv = jQuery('<fieldset></fieldset>');\r\n        $publishedToFilterDiv.append(this.$filterButtonDiv);\r\n\r\n        this.filterbuttonOptions.forEach((value, index) => {\r\n            let $radioButton = jQuery(`<input type=\"radio\" id=\"b${index}\" name=\"publishedFilter\" value=\"${index}\" ${index == 0 ? \"checked\" : \"\"}>`);\r\n            $radioButton.data('value', index);\r\n            $radioButton.on(\"change\", (e) => {\r\n                that.showRepositories();\r\n            })\r\n            this.$filterButtonDiv.append($radioButton);\r\n            this.$filterButtonDiv.append(jQuery(`<label for=\"b${index}\">${value}</label>`));\r\n        })\r\n\r\n        let $inputFilterDiv = makeDiv(\"\", \"checkoutRepo-chooseDiv\");\r\n        $divBelow.append($inputFilterDiv);\r\n        $inputFilterDiv.append(makeDiv(\"\", \"checkoutRepo-minorHeading\", \"Filter/Suche:\"));\r\n        this.$filterInput = jQuery('<input type=\"text\"></input>');\r\n        $inputFilterDiv.append(this.$filterInput);\r\n\r\n        this.$filterInput.on(\"input\", (e) => {\r\n            that.showRepositories();\r\n        });\r\n\r\n        $divBelow.append(makeDiv('', 'updateRepo-minorHeading', 'Repositories:', {'margin-bottom': '10px', 'margin-top': '20px'}));\r\n\r\n        this.$repoListDiv = makeDiv('#checkoutRepo-repoListDiv', 'jo-scrollable');\r\n        $divBelow.append(this.$repoListDiv);\r\n\r\n        let $buttonDiv = makeDiv(\"updateRepo-buttonDiv\");\r\n\r\n        $buttonDiv.append(this.$checkoutButton = makeDiv(\"\", \"jo_synchro_button\", \"Checkout\", { \"background-color\": \"var(--updateButtonBackground)\", \"color\": \"var(--updateButtonColor)\" }));\r\n        this.$checkoutButton.on(\"click\", () => { that.checkoutButtonClicked() })\r\n\r\n        $divBelow.append($buttonDiv);\r\n\r\n    }\r\n\r\n    show(workspace: Workspace) {\r\n\r\n        if (!this.guiReady) {\r\n            this.initGUI();\r\n        }\r\n\r\n        let $checkoutDiv = jQuery('#checkoutRepo-div');\r\n        $checkoutDiv.css('visibility', 'visible');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'hidden');\r\n\r\n        let user = this.main.user;\r\n\r\n        let grlq: GetRepositoryListRequest = {\r\n            onlyOwnRepositories: false\r\n        }\r\n\r\n        this.$repoListDiv.empty();\r\n        let that = this;\r\n        ajax('getRepositoryList', grlq, (response: GetRepositoryListResponse) => {\r\n\r\n            this.repositories = response.repositories;\r\n\r\n            this.showRepositories();\r\n\r\n        });\r\n\r\n        // Init Workspace-Dropdown\r\n        this.$workspaceDropdown.empty();\r\n        setSelectItems(this.$workspaceDropdown, [{\r\n            caption: \"Neuen Workspace erstellen\",\r\n            object: null,\r\n            value: -1\r\n        }].concat(this.main.workspaceList.filter(ws => ws.repository_id == null).map(ws => {\r\n            return {\r\n                caption: ws.name,\r\n                object: ws,\r\n                value: ws.id\r\n            }\r\n        }))\r\n        , -1);\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.hide();\r\n        });\r\n\r\n    }\r\n\r\n\r\n    showRepositories(){\r\n\r\n        let that = this;\r\n\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').remove();\r\n\r\n        let published_to = this.$filterButtonDiv.find('input:checked').data('value') - 1;\r\n\r\n        let filteredRepositories: RepositoryInfo[] = published_to < 0 ? this.repositories :\r\n            this.repositories.filter(repoInfo => repoInfo.published_to == published_to);\r\n\r\n        let filterSearch: string = <string>this.$filterInput.val();\r\n        filterSearch = filterSearch.toLocaleLowerCase();\r\n\r\n        if(filterSearch != \"\"){\r\n            filteredRepositories = filteredRepositories.filter(\r\n                repInfo => [repInfo.owner_username , repInfo.owner_name , repInfo.name , repInfo.description].join(\" \").toLocaleLowerCase().indexOf(filterSearch) >= 0\r\n            )\r\n        }\r\n\r\n        filteredRepositories.forEach(repInfo => {\r\n            let $div = makeDiv('', 'checkoutRepo-repoListItem');\r\n            let $divLeft = makeDiv('', 'checkoutRepo-repoListItemLeft');\r\n            $div.append($divLeft);\r\n\r\n            $divLeft.append(makeDiv('', 'checkoutRepo-repoListName', repInfo.name));\r\n            $divLeft.append(makeDiv('', 'checkoutRepo-repoListOwner', repInfo.owner_name + \" (\" + repInfo.owner_username + \")\"));\r\n\r\n            let $divRight = makeDiv('', 'checkoutRepo-repoListItemRight', repInfo.description);\r\n            $div.append($divRight);\r\n\r\n            this.$repoListDiv.append($div);\r\n            $div.data('repoInfo', repInfo);\r\n            $div.on(\"click\", () => {\r\n                that.selectRepository($div, repInfo);\r\n            })\r\n        });\r\n\r\n        this.selectFirstRepository();\r\n\r\n    }\r\n\r\n    selectRepository($repoDiv: JQuery<HTMLDivElement>, repInfo: RepositoryInfo) {\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').removeClass('active');\r\n        if($repoDiv != null){\r\n            $repoDiv.addClass('active');\r\n        }\r\n    }\r\n\r\n    selectFirstRepository(){\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').removeClass('active');\r\n        this.$repoListDiv.find('.checkoutRepo-repoListItem').first().addClass('active');\r\n    }\r\n\r\n    hide() {\r\n        let $synchroDiv = jQuery('#checkoutRepo-div');\r\n        $synchroDiv.css('visibility', 'hidden');\r\n        let $mainDiv = jQuery('#main');\r\n        $mainDiv.css('visibility', 'visible');\r\n    }\r\n\r\n    checkoutButtonClicked() {\r\n        let selectedItem = this.$repoListDiv.find('.active').first();\r\n        let repoData: RepositoryInfo = <any>selectedItem.data('repoInfo');\r\n\r\n        let workspace: Workspace = getSelectedObject(this.$workspaceDropdown);\r\n\r\n        let request: AttachWorkspaceToRepositoryRequest = {\r\n            repository_id: repoData.id,\r\n            createNewWorkspace: workspace == null,\r\n            workspace_id: workspace == null ? null : workspace.id\r\n        }\r\n\r\n        let that = this;\r\n        ajax('attachWorkspaceToRepository', request, (response: AttachWorkspaceToRepositoryResponse) => {\r\n\r\n            if(workspace == null && response.new_workspace != null){\r\n\r\n                that.main.networkManager.createNewWorkspaceFromWorkspaceData(response.new_workspace);\r\n                alert('Der neue Workspace ' + response.new_workspace.name + \" wurde erfolgreich angelegt.\");\r\n\r\n            } else {\r\n\r\n                workspace.repository_id = repoData.id;\r\n                let explorer = that.main.projectExplorer;\r\n                explorer.workspaceListPanel.setElementClass(workspace.panelElement, \"repository\");\r\n                alert(`Der Workspace ${workspace.name} wurde erfolgreich mit dem Repository ${repoData.name} verknüpft.`);\r\n\r\n            }\r\n\r\n            window.history.back();\r\n\r\n        });\r\n\r\n        // let updateRepositoryRequest: UpdateRepositoryRequest = {\r\n        //     owner_id: owner.user_id,\r\n        //     description: <string>this.$repoDescription.val(),\r\n        //     published_to: published_to,\r\n        //     repository_id: repoData.id\r\n        // };\r\n\r\n        // ajax(\"updateRepository\", updateRepositoryRequest, (response: UpdateRepositoryResponse) => {\r\n\r\n        //     //TODO: update user write access..\r\n\r\n\r\n        // });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    exitButtonClicked() {\r\n        this.hide();\r\n    }\r\n\r\n\r\n}","import { Main } from \"./Main.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\n\r\n\r\njQuery(function () {\r\n\r\n    let main = new Main();\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': 'lib/monaco-editor/dev/vs' } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        main.initEditor();\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.bottomDiv.initGUI();\r\n\r\n        if(main.repositoryOn){\r\n            main.synchronizationManager = new SynchronizationManager(main);\r\n            main.synchronizationManager.initGUI();\r\n            main.repositoryCreateManager = new RepositoryCreateManager(main);\r\n            main.repositoryCreateManager.initGUI();\r\n            main.repositoryUpdateManager = new RepositorySettingsManager(main);\r\n            main.repositoryUpdateManager.initGUI();\r\n            main.repositoryCheckoutManager = new RepositoryCheckoutManager(main);\r\n            main.repositoryCheckoutManager.initGUI();\r\n\r\n        }\r\n        // main.loadWorkspace();\r\n\r\n\r\n    });\r\n\r\n    PIXI.Loader\r\n        .shared.add(\"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n    main.initGUI();\r\n\r\n});"],"sourceRoot":""}